[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "",
    "text": "Ders Kodu: OLC731\nProgram: Ölçme ve Değerlendirme Doktora Programı\nDönem: Güz 2025\nÖğretim Üyesi: 🏛 Assoc. Prof. Dr. Kübra Atalay Kabasakal\n🧭 ORCID, 🎓 YÖK Akademik, 🧑‍💻 GitHub,\nİletişim: kkatalay@gmail.com / katalay@hacettepe.edu.tr\nDers Web sitesi: https://atalay-k.github.io/2025_OLC731"
  },
  {
    "objectID": "index.html#hafta-1-giriş",
    "href": "index.html#hafta-1-giriş",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.1 Hafta 1 – Giriş",
    "text": "3.1 Hafta 1 – Giriş\n\nDersin tanıtımı, R ve RStudio kurulumu, veri kavramı\nVeri türleri, paketlerle veri yükleme"
  },
  {
    "objectID": "index.html#hafta-2-veri-inceleme---i",
    "href": "index.html#hafta-2-veri-inceleme---i",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.2 Hafta 2 – Veri İnceleme - I",
    "text": "3.2 Hafta 2 – Veri İnceleme - I\n\nDeğişken türleri\nVeri setlerini tanıma (glimpse(), summary(), görselleştirme temelleri)"
  },
  {
    "objectID": "index.html#hafta-3-veri-inceleme---ii",
    "href": "index.html#hafta-3-veri-inceleme---ii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.3 Hafta 3 – Veri İnceleme - II",
    "text": "3.3 Hafta 3 – Veri İnceleme - II\n\nVeri temizleme, eksik/veri hataları\n\nKategorik ve sürekli değişkenlerle temel özet istatistikler"
  },
  {
    "objectID": "index.html#hafta-4-keşfedici-veri-analizi--i",
    "href": "index.html#hafta-4-keşfedici-veri-analizi--i",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.4 Hafta 4 – Keşfedici Veri Analizi- I",
    "text": "3.4 Hafta 4 – Keşfedici Veri Analizi- I\n\nTek değişkenli görselleştirme (barplot, histogram, boxplot)\n\nDağılımların yorumlanması"
  },
  {
    "objectID": "index.html#hafta-5-keşfedici-veri-analizi--ii",
    "href": "index.html#hafta-5-keşfedici-veri-analizi--ii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.5 Hafta 5 – Keşfedici Veri Analizi- II",
    "text": "3.5 Hafta 5 – Keşfedici Veri Analizi- II\n\nİki değişkenli görselleştirme (scatterplot, grouped barplot)\n\nKategorik + sayısal ilişkiler, korelasyon"
  },
  {
    "objectID": "index.html#hafta-6-regresyon-i",
    "href": "index.html#hafta-6-regresyon-i",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.6 Hafta 6 – Regresyon I",
    "text": "3.6 Hafta 6 – Regresyon I\n\nBasit doğrusal regresyon\n\nRegresyon katsayılarının yorumlanması"
  },
  {
    "objectID": "index.html#hafta-7-regresyon-ii",
    "href": "index.html#hafta-7-regresyon-ii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.7 Hafta 7 – Regresyon II",
    "text": "3.7 Hafta 7 – Regresyon II\n\nÇoklu regresyon\n\nVarsayımlar, etkileşim terimleri"
  },
  {
    "objectID": "index.html#hafta-8-ara-sınav",
    "href": "index.html#hafta-8-ara-sınav",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.8 Hafta 8 – Ara Sınav",
    "text": "3.8 Hafta 8 – Ara Sınav"
  },
  {
    "objectID": "index.html#hafta-9-regresyon-iii",
    "href": "index.html#hafta-9-regresyon-iii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.9 Hafta 9 – Regresyon III",
    "text": "3.9 Hafta 9 – Regresyon III\n\nRegresyon modelleme uygulamaları"
  },
  {
    "objectID": "index.html#hafta-10-istatistiksel-çıkarım-i",
    "href": "index.html#hafta-10-istatistiksel-çıkarım-i",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.10 Hafta 10 – İstatistiksel çıkarım I",
    "text": "3.10 Hafta 10 – İstatistiksel çıkarım I\n\nÖrnekleme dağılımı\nMerkezî limit teoremi, güven aralıkları"
  },
  {
    "objectID": "index.html#hafta-11-istatistiksel-çıkarım-ii",
    "href": "index.html#hafta-11-istatistiksel-çıkarım-ii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.11 Hafta 11 – İstatistiksel çıkarım II",
    "text": "3.11 Hafta 11 – İstatistiksel çıkarım II\n\nHipotez testleri: t-test, ki-kare testleri"
  },
  {
    "objectID": "index.html#hafta-12-istatistiksel-çıkarım-iii",
    "href": "index.html#hafta-12-istatistiksel-çıkarım-iii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.12 Hafta 12 – İstatistiksel çıkarım III",
    "text": "3.12 Hafta 12 – İstatistiksel çıkarım III\n\nANOVA, post-hoc testler\nEtki büyüklüğü, yorumlama"
  },
  {
    "objectID": "index.html#hafta-13-çıkarımsal-modelleme-i",
    "href": "index.html#hafta-13-çıkarımsal-modelleme-i",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.13 Hafta 13 – Çıkarımsal Modelleme I",
    "text": "3.13 Hafta 13 – Çıkarımsal Modelleme I\n\nLojistik regresyon\nModel karşılaştırmaları"
  },
  {
    "objectID": "index.html#hafta-14-çıkarımsal-modelleme-ii",
    "href": "index.html#hafta-14-çıkarımsal-modelleme-ii",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.14 Hafta 14 – Çıkarımsal Modelleme II",
    "text": "3.14 Hafta 14 – Çıkarımsal Modelleme II\n\nModel seçimi, çapraz doğrulama\nGenel tekrar ve proje sunumları"
  },
  {
    "objectID": "index.html#hafta-15-genel-tekrar-ve-tartışma",
    "href": "index.html#hafta-15-genel-tekrar-ve-tartışma",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.15 Hafta 15 – Genel tekrar ve tartışma",
    "text": "3.15 Hafta 15 – Genel tekrar ve tartışma"
  },
  {
    "objectID": "index.html#hafta-16-final-sınavı-proje-teslimi",
    "href": "index.html#hafta-16-final-sınavı-proje-teslimi",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "3.16 Hafta 16 – Final sınavı / Proje teslimi",
    "text": "3.16 Hafta 16 – Final sınavı / Proje teslimi"
  },
  {
    "objectID": "index.html#ilgili-bağlantılar-ve-mevzuat",
    "href": "index.html#ilgili-bağlantılar-ve-mevzuat",
    "title": "Ders Tanıtımı ve İzlence",
    "section": "7.1 🔗 İlgili Bağlantılar ve Mevzuat",
    "text": "7.1 🔗 İlgili Bağlantılar ve Mevzuat\n📄 Dersin AKTS Bilgi Paketi Sayfası (Hacettepe Üniversitesi)\n📜 Bu ders, Hacettepe Üniversitesi Lisansüstü Eğitim ve Öğretim Yönetmeliği hükümlerine uygun olarak yürütülmektedir."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html",
    "href": "haftalar/intro_to_r - tr.html",
    "title": "R and RStudio Tanıtımı",
    "section": "",
    "text": "Bu dersin amacı, sizi R ve RStudio ile tanıştırmaktır. Bu programları ders boyunca hem istatistiksel kavramları öğrenmek hem de gerçek verileri analiz ederek bilinçli sonuçlara ulaşmak için kullanacaksınız. Öncelikle hangisinin ne olduğuna açıklık getirelim:\nR programlama dilinin kendisinin adıdır, RStudio ise R ile çalışmak için kullanılan kullanışlı bir arayüzdür.\nDers ilerledikçe, size verilen yönergelerin ötesinde keşif yapmanız teşvik edilmektedir; denemeye ve kurcalamaya istekli olmak sizi çok daha iyi bir programcı yapacaktır! Ancak o aşamaya gelmeden önce R içinde temel bir akıcılık kazanmanız gerekir.\nŞimdi RStudio’yu açın. Aşağıda gösterilen resme benzeyen bir pencere görmelisiniz.\n\nSol alttaki panel, işlerin gerçekleştiği yerdir. Bu panele konsol (console) denir. Her RStudio’yu açtığınızda, konsolun en üstünde çalıştırdığınız R sürümünü gösteren aynı metni görürsünüz. Bu bilginin hemen altında ise &gt; sembolü ile gösterilen komut istemi (prompt) bulunur. Adından da anlaşılacağı gibi bu istem aslında bir talep niteliğindedir: sizden bir komut bekler.\nBaşlangıçta R ile etkileşim tamamen komut yazmak ve çıktıyı yorumlamaktan ibarettir. Bu komutlar ve sözdizimleri on yıllar boyunca (gerçekten) gelişmiş ve günümüzde birçok kullanıcıya veriye erişmek, verileri düzenlemek, tanımlamak ve istatistiksel hesaplamaları yürütmek için oldukça doğal bir yol sunar.\n\nSağ üstteki panelde, ortamınız (environment) ve daha önce girdiğiniz komutların geçmişi (history) bulunur.\nSağ alttaki panelde ise proje klasörünüzdeki dosyaları (files) inceleyebileceğiniz, R fonksiyonlarına ait yardım (help) dosyalarına ulaşabileceğiniz, R paketlerini (packages) yükleyip yönetebileceğiniz ve görselleştirmeleri inceleyebileceğiniz sekmeler yer alır. Varsayılan olarak, oluşturduğunuz tüm görselleştirmeler onları üretmek için yazdığınız kodun hemen altında görünür. Eğer grafiklerinizin plots sekmesinde görünmesini tercih ederseniz, genel ayarlarınızı (global options) değiştirmeniz gerekir.\n\n\n\nR açık kaynaklı (open-source) bir programlama dilidir. Yani kullanıcılar hayatımızı kolaylaştıracak paketler geliştirebilir ve biz bu paketleri ücretsiz olarak kullanabiliriz.\ntidyverse: Veri düzenleme (data wrangling) ve veri görselleştirme için birçok farklı R paketini barındıran bir “şemsiye” pakettir.\nopenintro: OpenIntro kaynaklarıyla birlikte gelen veri setleri ve özel fonksiyonlar için kullanılan bir R paketidir.\nSağ alttaki köşede bulunan Packages sekmesine tıklayın. Arama kutusuna bu paketlerin isimlerini (tidyverse, openintro) yazın ve kurulu olup olmadıklarını kontrol edin. Eğer bu paketler yazdığınızda görünmüyorsa, aşağıdaki iki satır kodu RStudio oturumunuzdaki konsola kopyalayıp yapıştırarak (veya yazarak) kurabilirsiniz. Her satırı yazdıktan sonra mutlaka Enter/Return tuşuna basın.\n\n\nCode\ninstall.packages(\"tidyverse\")\ninstall.packages(\"openintro\")\n\n\nEnter/Return tuşuna bastıktan sonra, seçtiğiniz konumdan paketi kurarken R’ın yürüttüğü işlemleri gösteren uzun bir metin akışı başlayacaktır. Eğer R’ı yüklerken paketleri indirmek için bir sunucu seçmeniz istenmediyse, RStudio sizden bir sunucu seçmenizi isteyebilir; bu sunucuların herhangi birini seçmeniz yeterlidir.\nPaketleri kurma (install) işlemini yalnızca bir kez yapmanız gerekir, ancak RStudio’yu her yeniden açtığınızda paketleri yüklemeniz (load) gerekir. Paketleri yüklemek için library fonksiyonunu kullanırız. tidyverse ve openintro paketlerini çalışma ortamınıza yüklemek için aşağıdaki iki satırı konsolunuza kopyalayıp yapıştırın (veya kendiniz yazın\n\n\nCode\nlibrary(tidyverse)\nlibrary(openintro)\n\n\ntidyverse paketini veriyle çalışmanın farklı yönleri için gerekli olan paketler bütününden oluşur; veriyi yüklemekten (loading), düzenlemeye (wrangling), görselleştirmeye (visualizing) ve analiz etmeye (analyzing) kadar her aşamayı kapsar. Ayrıca bu paketler ortak felsefeleri paylaşır ve birlikte çalışacak şekilde tasarlanmıştır. tidyverse paketleri hakkında daha fazla bilgiyi tidyverse.org adresinde bulabilirsiniz."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#rstudio-arayüz",
    "href": "haftalar/intro_to_r - tr.html#rstudio-arayüz",
    "title": "R and RStudio Tanıtımı",
    "section": "",
    "text": "Bu dersin amacı, sizi R ve RStudio ile tanıştırmaktır. Bu programları ders boyunca hem istatistiksel kavramları öğrenmek hem de gerçek verileri analiz ederek bilinçli sonuçlara ulaşmak için kullanacaksınız. Öncelikle hangisinin ne olduğuna açıklık getirelim:\nR programlama dilinin kendisinin adıdır, RStudio ise R ile çalışmak için kullanılan kullanışlı bir arayüzdür.\nDers ilerledikçe, size verilen yönergelerin ötesinde keşif yapmanız teşvik edilmektedir; denemeye ve kurcalamaya istekli olmak sizi çok daha iyi bir programcı yapacaktır! Ancak o aşamaya gelmeden önce R içinde temel bir akıcılık kazanmanız gerekir.\nŞimdi RStudio’yu açın. Aşağıda gösterilen resme benzeyen bir pencere görmelisiniz.\n\nSol alttaki panel, işlerin gerçekleştiği yerdir. Bu panele konsol (console) denir. Her RStudio’yu açtığınızda, konsolun en üstünde çalıştırdığınız R sürümünü gösteren aynı metni görürsünüz. Bu bilginin hemen altında ise &gt; sembolü ile gösterilen komut istemi (prompt) bulunur. Adından da anlaşılacağı gibi bu istem aslında bir talep niteliğindedir: sizden bir komut bekler.\nBaşlangıçta R ile etkileşim tamamen komut yazmak ve çıktıyı yorumlamaktan ibarettir. Bu komutlar ve sözdizimleri on yıllar boyunca (gerçekten) gelişmiş ve günümüzde birçok kullanıcıya veriye erişmek, verileri düzenlemek, tanımlamak ve istatistiksel hesaplamaları yürütmek için oldukça doğal bir yol sunar.\n\nSağ üstteki panelde, ortamınız (environment) ve daha önce girdiğiniz komutların geçmişi (history) bulunur.\nSağ alttaki panelde ise proje klasörünüzdeki dosyaları (files) inceleyebileceğiniz, R fonksiyonlarına ait yardım (help) dosyalarına ulaşabileceğiniz, R paketlerini (packages) yükleyip yönetebileceğiniz ve görselleştirmeleri inceleyebileceğiniz sekmeler yer alır. Varsayılan olarak, oluşturduğunuz tüm görselleştirmeler onları üretmek için yazdığınız kodun hemen altında görünür. Eğer grafiklerinizin plots sekmesinde görünmesini tercih ederseniz, genel ayarlarınızı (global options) değiştirmeniz gerekir.\n\n\n\nR açık kaynaklı (open-source) bir programlama dilidir. Yani kullanıcılar hayatımızı kolaylaştıracak paketler geliştirebilir ve biz bu paketleri ücretsiz olarak kullanabiliriz.\ntidyverse: Veri düzenleme (data wrangling) ve veri görselleştirme için birçok farklı R paketini barındıran bir “şemsiye” pakettir.\nopenintro: OpenIntro kaynaklarıyla birlikte gelen veri setleri ve özel fonksiyonlar için kullanılan bir R paketidir.\nSağ alttaki köşede bulunan Packages sekmesine tıklayın. Arama kutusuna bu paketlerin isimlerini (tidyverse, openintro) yazın ve kurulu olup olmadıklarını kontrol edin. Eğer bu paketler yazdığınızda görünmüyorsa, aşağıdaki iki satır kodu RStudio oturumunuzdaki konsola kopyalayıp yapıştırarak (veya yazarak) kurabilirsiniz. Her satırı yazdıktan sonra mutlaka Enter/Return tuşuna basın.\n\n\nCode\ninstall.packages(\"tidyverse\")\ninstall.packages(\"openintro\")\n\n\nEnter/Return tuşuna bastıktan sonra, seçtiğiniz konumdan paketi kurarken R’ın yürüttüğü işlemleri gösteren uzun bir metin akışı başlayacaktır. Eğer R’ı yüklerken paketleri indirmek için bir sunucu seçmeniz istenmediyse, RStudio sizden bir sunucu seçmenizi isteyebilir; bu sunucuların herhangi birini seçmeniz yeterlidir.\nPaketleri kurma (install) işlemini yalnızca bir kez yapmanız gerekir, ancak RStudio’yu her yeniden açtığınızda paketleri yüklemeniz (load) gerekir. Paketleri yüklemek için library fonksiyonunu kullanırız. tidyverse ve openintro paketlerini çalışma ortamınıza yüklemek için aşağıdaki iki satırı konsolunuza kopyalayıp yapıştırın (veya kendiniz yazın\n\n\nCode\nlibrary(tidyverse)\nlibrary(openintro)\n\n\ntidyverse paketini veriyle çalışmanın farklı yönleri için gerekli olan paketler bütününden oluşur; veriyi yüklemekten (loading), düzenlemeye (wrangling), görselleştirmeye (visualizing) ve analiz etmeye (analyzing) kadar her aşamayı kapsar. Ayrıca bu paketler ortak felsefeleri paylaşır ve birlikte çalışacak şekilde tasarlanmıştır. tidyverse paketleri hakkında daha fazla bilgiyi tidyverse.org adresinde bulabilirsiniz."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#uygulamalı-görev---1",
    "href": "haftalar/intro_to_r - tr.html#uygulamalı-görev---1",
    "title": "R and RStudio Tanıtımı",
    "section": "2 💡 Uygulamalı Görev - 1",
    "text": "2 💡 Uygulamalı Görev - 1\nBu ders kapsamında kullanacağız CTT, ltm ve mirt paketlerini yükleyiniz.\n\nJava ve Rtools sadece Windows kullanıcıları için gereklidir.\n\nJava\nRtools Rtools, kaynak koddan derleme yapmaya yarayan araçları içeren bir R yardımcısıdır\n\n\n\n2.1 Yeniden üretilebilir raporlar üretme\nYeniden üretilebilir (reproducible) laboratuvar raporları oluşturmak için R Markdown kullanacağız. Bunun neden ve nasıl yapılacağını açıklayan videoları aşağıda bulabilirsiniz:\nWhy use R Markdown for Lab Reports? \nUsing R Markdown for Lab Reports in RStudio \nKısaca, RStudio’da New File → R Markdown… yolunu izleyin. Ardından “From Template” seçeneğini seçin ve listeden Lab Report for OpenIntro Statistics Lab 1 şablonunu seçin.\nBundan sonra kodunuzu doğrudan konsola yazmaktan kaçınmalısınız; çünkü bu şekilde yazmak istediğiniz çıktıyı hatırlamayı ve yeniden üretmeyi çok zorlaştırır. R Markdown dosyalarının belki de en önemli özelliği, R kodunu yazılı raporun içine gömmemize izin vermesidir. Bir R Markdown dosyasında R kodu gri kutular içinde görünür, biz bunlara “kod parçacıkları (code chunks)” diyoruz. R Markdown, bu gri kutuların R kodu içerdiğini, üç tane ters tırnak işareti (```) ile başlayıp ardından süslü parantezler içinde küçük r harfi ({r}) yazmasından anlar. Bunu zaten yukarıda görmüştünüz!\nKodlarımızı konsola yazmak yerine, her problem için ayrılmış R kod parçacıklarının içine (doğru yanıt veya sadece denediğiniz kodlar fark etmez) yazmanızı tavsiye ediyoruz. Bu kod parçacıklarındaki R kodunu, konsolda yaptığınız gibi çalıştırabilirsiniz. Bir kod satırını çalıştırmak için iki yol vardır:\nİmleci kod satırının üzerine getirin ve aynı anda Ctrl-Enter (veya Mac’te Cmd-Enter) tuşlarına basın.\nİmleci kod satırının üzerine getirin ve R Markdown dosyasının sağ üst köşesinde yer alan “Run” butonuna tıklayın.\nEğer bir kod parçacığındaki tüm R kodunu çalıştırmak isterseniz, o kod parçacığının sağ üst köşesindeki “Play” butonuna (yeşil üçgen) tıklayabilirsiniz.\nHerhangi bir noktada en baştan başlamak ve belirli bir kod parçacığından önceki tüm kod parçacıklarını çalıştırmak isterseniz, o kod parçacığının sağ üst köşesindeki “Fastforward” butonuna (altında çizgi olan gri ters üçgen) tıklayın. Bu, o parçacıktan önceki tüm kodları çalıştırır, ancak seçtiğiniz kod parçacığındaki R kodunu çalıştırmaz."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#dr.-arbuthnotun-vaftiz-kayıtları",
    "href": "haftalar/intro_to_r - tr.html#dr.-arbuthnotun-vaftiz-kayıtları",
    "title": "R and RStudio Tanıtımı",
    "section": "3 Dr. Arbuthnot’un Vaftiz Kayıtları",
    "text": "3 Dr. Arbuthnot’un Vaftiz Kayıtları\nBaşlamak için, hadi veriye kısa bir göz atalım.\n\n\nCode\narbuthnot\n\n\nYukarıdaki kodu çalıştırmak için şunları yapabilirsiniz:\nİmleci satırın üzerine getirip Ctrl-Enter (veya Mac’te Cmd-Enter) tuşlarına basmak,\nİmleci satırın üzerine getirip R Markdown dosyasının sağ üst köşesindeki “Run” butonuna tıklamak, ya da\nKod parçacığının sağ üst köşesindeki yeşil oka tıklamak.\nBu kod parçacığında yer alan tek satırlık komut, R’a bazı verileri yüklemesini söyler: erkek ve kız çocuklarının Arbuthnot vaftiz sayıları. Şimdi RStudio penceresinin sağ üst köşesindeki Environment sekmesinde arbuthnot adında, 82 gözlem ve 3 değişkenden oluşan bir veri seti listelendiğini görmelisiniz. R ile çalışırken çeşitli amaçlarla nesneler (objects) oluşturursunuz. Bazen bu nesneleri bir paketi yükleyerek çalışma alanınıza getirirsiniz (burada yaptığımız gibi), bazen de bir hesaplama süreci, yaptığınız bir analiz veya oluşturduğunuz bir görselleştirme sonucunda kendiniz oluşturursunuz.\nArbuthnot veri seti, 18. yüzyıl hekim, yazar ve matematikçi Dr. John Arbuthnot’un çalışmasına dayanmaktadır. Arbuthnot, erkek ve kız bebeklerin doğum oranıyla ilgilenmiş ve 1629’dan 1710’a kadar Londra’da doğan çocukların vaftiz kayıtlarını toplamıştır. Veriye yeniden bakmak için aşağıdaki kodu çalıştırabilir veya veri setinin adını doğrudan konsola yazabilirsiniz. Dikkat edin: yazım ve büyük/küçük harf kullanımı önemlidir! R büyük/küçük harfe duyarlıdır; eğer yanlışlıkla Arbuthnot yazarsanız, R bu nesnenin bulunamadığını söyleyecektir.\n\n\nCode\narbuthnot\n\n\nBu komut veriyi bizim için gösterir, ancak tüm veri setini konsolda yazdırmak çok da kullanışlı değildir. RStudio’nun avantajlarından biri, dahili bir veri görüntüleyici (Data Viewer) ile gelmesidir. Sağ üst paneldeki Environment sekmesi, ortamınızdaki nesneleri listeler. Burada arbuthnot ismine tıkladığınızda, R Markdown dosyanızın yanında yeni bir Data Viewer sekmesi açılır ve veri setini alternatif bir şekilde görüntülemenizi sağlar. Bu görünüm, veriyi Excel’de incelemeye benzer; veri setini kaydırarak satırları inceleyebilirsiniz. Ancak Excel’den farklı olarak, bu sekmede veriyi düzenleyemezsiniz. İnceleme işiniz bittiğinde, sekmeyi sol üst köşesindeki x işaretine tıklayarak kapatabilirsiniz.\nVeriyi incelerken, dört sütun ve 82 satır görmelisiniz. Her satır, Arbuthnot’un veri topladığı farklı bir yılı temsil eder. Her satırdaki ilk değer satır numarasıdır (istersek belirli yıllara erişmek için kullanabileceğimiz bir indeks). İkinci sütun yıl bilgisini, üçüncü ve dördüncü sütun ise o yıl vaftiz edilen erkek ve kız çocuklarının sayılarını gösterir. Konsol penceresinin sağındaki kaydırma çubuğunu kullanarak veri setinin tamamını inceleyebilirsiniz.\nDikkat edin: İlk sütundaki satır numaraları Arbuthnot’un verilerinin bir parçası değildir. R bu satır numaralarını, çıktıda görsel karşılaştırma yapmanıza yardımcı olmak için ekler. Bunları, bir elektronik tabloda sol tarafta gördüğünüz indeks gibi düşünebilirsiniz. Aslında, veriyi bir tabloya (spreadsheet) benzetmek genelde faydalıdır. R, Arbuthnot’un verilerini elektronik tabloya benzeyen bir nesne içinde saklamıştır; R bu tür nesnelere data frame (veri çerçevesi) adını verir.\nBu veri çerçevesinin boyutlarını, değişken adlarını ve ilk birkaç gözlemini görmek için veri setinin adını glimpse() fonksiyonunun içine yazabilirsiniz, aşağıda görüldüğü gibi:\n\n\nCode\nglimpse(arbuthnot)\n\n\nDaha önce tüm R kodunuzu kod parçacığına (code chunk) yazmanın en iyi uygulama olduğunu söylemiş olsak da, bu komutu konsola yazmanız daha doğru olur. Genel kural olarak, çözümünüz için gerekli olan tüm kodları kod parçacığına yazmalısınız. Ancak bu komut yalnızca veriyi keşfetmek için kullanıldığından, çözüm kodunuz için gerekli değildir ve çözüm dosyanıza eklenmemelidir.\nBu komutun çıktısı aşağıdaki gibi olmalıdır:\n\n\nRows: 82\nColumns: 3\n$ year  &lt;int&gt; 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639…\n$ boys  &lt;int&gt; 5218, 4858, 4422, 4994, 5158, 5035, 5106, 4917, 4703, 5359, 5366…\n$ girls &lt;int&gt; 4683, 4457, 4102, 4590, 4839, 4820, 4928, 4605, 4457, 4952, 4784…\n\n\nBu veri setinde 82 gözlem ve 3 değişken olduğunu görebiliyoruz. Değişken adları year, boys ve girls’tır. Bu noktada, R komutlarının çoğunun matematik derslerindeki fonksiyonlara çok benzediğini fark edebilirsiniz; yani R komutlarını çalıştırmak, bir fonksiyona belli sayıda girdi (argüman) vermek ve fonksiyonun bu girdileri kullanarak bir çıktı üretmesi anlamına gelir. Örneğin, glimpse() komutu tek bir argüman aldı: bir veri çerçevesinin adı. Sonuç olarak da veri setinin bir özetini çıktı olarak gösterdi."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#bazı-keşifler",
    "href": "haftalar/intro_to_r - tr.html#bazı-keşifler",
    "title": "R and RStudio Tanıtımı",
    "section": "4 Bazı Keşifler",
    "text": "4 Bazı Keşifler\nŞimdi veriyi biraz daha yakından incelemeye başlayalım. Bir veri çerçevesindeki tek bir sütuna, $ işaretiyle o sütunu seçerek erişebiliriz. Örneğin, aşağıdaki kod arbuthnot veri çerçevesinden boys sütununu çıkarır.\n\n\nCode\narbuthnot$boys\n\n\nBu komut yalnızca her yıl vaftiz edilen erkek çocuklarının sayılarını gösterir. R, $ işaretini şöyle yorumlar: “Benden önce gelen veri çerçevesine git ve benden sonra gelen değişkeni bul.”\nPeki sadece vaftiz edilen kız çocuklarının sayılarını çıkarmak için hangi komutu kullanırsınız? Bunu konsolda deneyin!\nDikkat edin, R bu verileri yazdırma biçimini farklı göstermektedir. Tüm veri çerçevesine baktığımızda 82 satır vardı ve her satırda bir yılın verisi yer alıyordu. Ancak bu veriler veri çerçevesinden çıkarıldığı için artık diğer değişkenlerle birlikte bir tablo şeklinde değil. Bunun yerine, bu veriler art arda sıralanmış şekilde gösterilir. Bu şekilde yazdırılan nesnelere vektör (vector) denir. Matematik derslerinden bildiğiniz vektörlere benzer biçimde, R’de vektörler sayı listelerini temsil eder.\nR, vektörün her bir elemanının konumunu göstermek için çıktının sol tarafına köşeli parantezler içinde sayılar ekler. Örneğin, [1] ifadesinden sonra 5218 geliyorsa, bu 5218’in vektörün ilk elemanı olduğu anlamına gelir. Eğer bir satırın başında [43] görüyorsanız, o satırda yazılan ilk sayının vektörün 43. elemanına karşılık geldiğini bilirsiniz.\n\n4.1 Görselleştirme\nR, grafikler oluşturmak için güçlü fonksiyonlara sahiptir. Aşağıdaki kod ile yıllara göre vaftiz edilen kız çocuklarının sayısını gösteren basit bir grafik oluşturabiliriz:\n\n\nCode\nggplot(data = arbuthnot, aes(x = year, y = girls)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nBu kodda, grafik oluşturmak için ggplot() fonksiyonunu kullanıyoruz. Bu kod parçacığını çalıştırdığınızda, grafiğiniz kodun hemen altında görünecektir. R Markdown belgesi, oluşturduğunuz grafiği kullandığınız kodun altında göstererek, size nihai raporda grafiğin nasıl görüneceğine dair bir fikir verir.\nYukarıdaki komut da matematiksel bir fonksiyona benzer görünüyor. Ancak bu kez fonksiyon birden fazla girdi (argüman) gerektirir ve bu argümanlar virgül ile ayrılır.\nggplot() fonksiyonunda:\nİlk argüman her zaman grafik için kullanmak istediğiniz veri setinin adıdır.\nSonrasında, veri setindeki değişkenleri grafiğin farklı aesthetik (görsel) öğelerine, örneğin x ve y eksenlerine atarsınız.\nBu komutlar size, x ve y eksenlerine atadığınız değişkenlerle boş bir grafik oluşturur. Sonraki adımda, ggplot() fonksiyonuna bu boş şablona hangi tür görselleştirme eklemek istediğinizi söylemeniz gerekir. ggplot()’a yeni bir katman eklemek için:\nSatırın sonuna + işareti ekleyerek yeni bir katman eklediğinizi belirtirsiniz.\nDaha sonra, grafiğin oluşturulması için kullanılacak geometrik nesneyi (geom) belirlersiniz.\nBiz burada bir dağılım grafiği (scatterplot) istediğimiz için geom_point() kullanıyoruz. Bu, ggplot()’a her bir gözlemin grafikte bir nokta ile temsil edilmesi gerektiğini söyler. Eğer yukarıdaki grafiği bir çizgi grafik (line graph) olarak görmek isteseydiniz, geom_point() yerine geom_line() kullanırdınız. Bu durumda ggplot(), her gözlemi bir sonraki gözlemle sırasıyla birleştiren bir çizgi çizerdi.\n\n\nCode\nggplot(data = arbuthnot, aes(x = year, y = girls)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\nGrafiği kullanarak aşağıdaki soruya cevap verin:\nYıllar boyunca vaftiz edilen kız çocuklarının sayısında belirgin bir eğilim var mı? Bunu nasıl tanımlarsınız? (Laboratuvar raporunuzun kapsamlı olması için, grafiği oluşturmak için gereken kodu ve yazılı yorumunuzu mutlaka ekleyin.)\nggplot() fonksiyonunun sözdizimini (syntax) nasıl bileceğinizi merak edebilirsiniz. Neyse ki R, tüm fonksiyonlarını kapsamlı şekilde belgelemiştir. Bir fonksiyonun ne yaptığını ve nasıl kullanılacağını (örneğin, fonksiyonun argümanlarını) öğrenmek için konsola sadece soru işareti yazıp ardından ilgilendiğiniz fonksiyonun adını yazmanız yeterlidir. Konsolunuza şunu yazın:\n\n\nCode\n?ggplot\n\n\nYardım dosyasının öne çıktığını ve sağ alttaki panelde grafiğin yerine geçtiğini fark edeceksiniz. Sekmeler arasında geçiş yapmak için isimlerine tıklayabilirsiniz.\n\n\n4.2 R büyük bir hesap makinesi olarak\nŞimdi, toplam vaftiz sayısını çizdirmek istediğimizi varsayalım. Bunun için, R’ı büyük bir hesap makinesi gibi kullanabileceğimizi göz önünde bulundurabiliriz. Bunu yapmak için, aşağıdaki örnekte olduğu gibi matematiksel ifadeleri konsola yazabiliriz.\n\n\nCode\n5218 + 4683\n\n\nBu hesaplama bize 1629 yılındaki toplam vaftiz sayısını verir. Daha sonra her yıl için bu hesaplamayı tekrarlayabiliriz. Ancak bu epey zaman alır. Neyse ki daha hızlı bir yol var! Erkek çocuklarının vaftiz sayılarını içeren vektörü kız çocuklarının vektörüne eklersek, R bu toplamların her birini aynı anda hesaplayabilir.\n\n\nCode\narbuthnot$boys + arbuthnot$girls\n\n\nKarşınıza 82 sayıdan oluşan bir liste çıkacaktır. Bu sayılar bir liste halinde görünür, çünkü bir data frame ile değil, bir vektör ile çalışıyoruz. Her sayı, o yıl vaftiz edilen erkek ve kız çocuklarının toplamını temsil eder. Hesaplamanın doğru olup olmadığını kontrol etmek için boys ve girls sütunlarının ilk birkaç satırına göz atabilirsiniz.\n\n\n4.3 Veri setine yeni bir sütun ekleme\nToplam vaftiz sayılarını içeren bu yeni vektörü grafikler üretmek için kullanmak istiyoruz, bu yüzden onu veri çerçevemizde kalıcı bir sütun olarak saklamamız gerekir. Bunu aşağıdaki kodu kullanarak yapabiliriz:\n\n\nCode\narbuthnot &lt;- arbuthnot %&gt;%\n  mutate(total = boys + girls)\n\n\nBu kod birçok yeni parça içeriyor, bu yüzden adım adım inceleyelim. İlk satırda iki şey yapıyoruz:\nGüncellenmiş veri çerçevemize yeni bir total sütunu ekliyoruz.\nMevcut arbuthnot veri çerçevesini, bu yeni total sütununu içeren güncellenmiş haliyle üzerine yazıyoruz (overwrite).\nBu iki işlemi birbirine bağlamamızı sağlayan şey pipe (borulama) (%&gt;%) operatörüdür. Pipe operatörü, bir önceki ifadenin çıktısını alır ve onu sonraki ifadenin ilk argümanı olarak “aktarır”.\nBunu matematiksel fonksiyon benzetmesiyle açıklarsak: x %&gt;% f(y) ifadesi, f(x, y) ifadesine eşdeğerdir.\nDolayısıyla arbuthnot ile mutate(total = boys + girls) ifadelerini pipe operatörüyle bağlamak, mutate(arbuthnot, total = boys + girls) yazmakla aynı şeydir. Burada arbuthnot, mutate() fonksiyonuna verilen ilk argüman olur.\n\n“arbuthnot veri setini al ve onu mutate fonksiyonuna pipe et. arbuthnot veri setini, boys ve girls değişkenlerinin toplamı olan total adında yeni bir değişken oluşturarak güncelle. Ardından, ortaya çıkan veri setini arbuthnot adlı nesneye ata; yani eski arbuthnot veri setinin üzerine, yeni değişkeni içeren güncellenmiş halini yaz.”\nBu, her satır için boys ve girls sayılarını toplayıp, bu değeri total adlı yeni bir sütuna kaydetmeye denktir.\n\n\nYeni değişken nerede? Veri setinizde değişiklik yaptığınızda, veri görüntüleyicide güncellenmiş halini görmek için veri setinin adına tekrar tıklayın.7\n\nArtık veri çerçevenize eklenmiş total adında yeni bir sütun olduğunu göreceksiniz. Özel &lt;- sembolü bir atama (assignment) işlemi yapar; yani pipe işlemlerinin çıktısını alır ve ortamınızdaki (environment) bir nesneye kaydeder. Bu durumda, ortamınızda zaten arbuthnot adlı bir nesne olduğundan, bu komut veri setini yeni eklenen sütunla güncelleyerek üzerine yazar.\nYıllara göre toplam vaftiz sayılarını çizgi grafik (line plot) olarak göstermek için şu kodu kullanabilirsiniz:\n\n\nCode\nggplot(data = arbuthnot, aes(x = year, y = total)) + \n  geom_line()\n\n\n\n\n\n\n\n\n\nBenzer şekilde, 1629 yılında vaftiz edilen erkek ve kız çocuklarının toplam sayısını öğrendikten sonra, erkek çocuklarının kız çocuklarına oranını aşağıdaki kod ile hesaplayabilirsiniz:\n\n\nCode\n5218 / 4683\n\n\nAlternatif olarak, bu oranı her yıl için hesaplayabilirsiniz. Bunun için tüm boys ve girls sütunları üzerinde işlem yapmanız yeterlidir; ardından bu hesaplamaları boy_to_girl_ratio adında yeni bir değişkene kaydedebilirsiniz:\n\n\nCode\narbuthnot &lt;- arbuthnot %&gt;%\n  mutate(boy_to_girl_ratio = boys / girls)\n\n\n1629 yılındaki yenidoğanların erkek çocuk olma oranını da aşağıdaki kod ile hesaplayabilirsiniz:\n\n\nCode\n5218 / (5218 + 4683)\n\n\nYa da bunu tüm yıllar için aynı anda hesaplayabilir ve sonuçları veri setine boy_ratio adında yeni bir değişken olarak ekleyebilirsiniz:\n\n\nCode\narbuthnot &lt;- arbuthnot %&gt;%\n  mutate(boy_ratio = boys / total)\n\n\nDikkat edin, bu hesaplamalarda boys + girls ifadesiyle bölmek yerine daha önce oluşturduğumuz total değişkenini kullanıyoruz!\nŞimdi, zaman içinde doğan erkek çocukların oranının grafiğini oluşturun. Ne görüyorsunuz?\n\nTip: Konsolda yukarı ve aşağı ok tuşlarını kullanarak, daha önce yazdığınız komutlar arasında gezinebilirsiniz; buna komut geçmişi (command history) denir. Ayrıca sağ üst paneldeki History sekmesine tıklayarak da komut geçmişinize erişebilirsiniz. Bu özellik, ileride size tekrar tekrar yazmaktan büyük ölçüde tasarruf sağlar.\n\nSon olarak, çıkarma ve bölme gibi basit matematiksel işleçlerin yanı sıra, R’a karşılaştırmalar da yaptırabilirsiniz. Örneğin, büyüktür &gt;, küçüktür &lt; ve eşittir ==.\nÖrneğin, aşağıdaki kod ile her yıl erkek doğumlarının kız doğumlarından fazla olup olmadığını gösteren more_boys adında yeni bir değişken oluşturabiliriz:\n\n\nCode\narbuthnot &lt;- arbuthnot %&gt;%\n  mutate(more_boys = boys &gt; girls)\n\n\nBu komut, arbuthnot veri çerçevesine yeni bir değişken ekler. Eğer o yıl erkek çocuklarının sayısı kız çocuklarından fazlaysa değer TRUE, değilse FALSE olur (cevap sizi şaşırtabilir). Bu değişken, şimdiye kadar karşılaştığımız veri türlerinden farklı bir veri türüdür. arbuthnot veri çerçevesindeki diğer sütunların tümü sayısal değerler (yıl, erkek ve kız çocuklarının sayıları) içerirken, burada R’dan mantıksal (logical) veri oluşturmasını istedik. Mantıksal veriler yalnızca TRUE veya FALSE değerlerinden oluşur.\nGenel olarak veri analizi, birçok farklı veri türünü içerir ve R kullanmamızın nedenlerinden biri de, bu veri türlerinin çoğunu temsil edebilmesi ve üzerinde işlem yapabilmesidir."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#daha-fazla-alıştırma",
    "href": "haftalar/intro_to_r - tr.html#daha-fazla-alıştırma",
    "title": "R and RStudio Tanıtımı",
    "section": "5 Daha fazla alıştırma",
    "text": "5 Daha fazla alıştırma\nÖnceki sayfalarda Arbuthnot’un vaftiz verilerine ait bazı görselleştirmeleri ve ön analizleri yeniden oluşturdunuz. Ödeviniz, bu adımları günümüzdeki Amerika Birleşik Devletleri doğum kayıtları için tekrarlamaktır. Bu veriler present adlı bir veri çerçevesinde saklanmaktadır.\nBir sütunun minimum ve maksimum değerlerini bulmak için summarize() fonksiyonu içinde min() ve max() fonksiyonlarını kullanabilirsiniz. Bu fonksiyon hakkında daha fazla bilgiyi bir sonraki laboratuvar çalışmasında öğreneceksiniz.\nİşte bir yıldaki erkek doğumlarının minimum ve maksimum sayılarını bulmaya yönelik bir örnek:\n\n\nCode\narbuthnot %&gt;%\n  summarize(min = min(boys),\n            max = max(boys)\n            )\n\n\n\nBu veri setinde hangi yıllar yer almaktadır? Veri çerçevesinin boyutları nelerdir? Değişken (sütun) adları nelerdir?\nBu sayılar Arbuthnot’un verileriyle nasıl karşılaştırılır? Benzer büyüklükte midirler?\nZaman içinde doğan erkek çocukların oranını gösteren bir grafik oluşturun. Ne görüyorsunuz? Arbuthnot’un erkek çocukların kız çocuklarından daha yüksek oranda doğduğu yönündeki gözlemi ABD için de geçerli mi? Yanıtınıza grafiği de ekleyin. İpucu: Exercise 3’teki kodunuzu yeniden kullanabilirsiniz, sadece veri çerçevesinin adını değiştirin.\nABD’de toplam doğumların en fazla olduğu yıl hangisidir?\n\nİpucu: Önce toplamları hesaplayın ve bunu yeni bir değişken olarak kaydedin. Daha sonra veri setinizi total sütununa göre azalan düzende sıralayın. Bunu veri görüntüleyicide, değişken adlarının yanındaki okları tıklayarak etkileşimli olarak yapabilirsiniz. Ancak sıralı sonucu raporunuza dahil etmek için iki yeni fonksiyon kullanmanız gerekecek. Önce arrange() fonksiyonunu kullanarak değişkeni sıralayın. Daha sonra desc() fonksiyonu ile veriyi azalan düzende sıralayabilirsiniz. Aşağıda örnek kod verilmiştir.\n\n\nCode\npresent %&gt;%\n  arrange(desc(total))\n\n\nBu veriler, Hastalık Kontrol ve Önleme Merkezleri (Centers for Disease Control) raporlarından alınmıştır. Daha fazla bilgi edinmek için ?present komutunu yazarak yardım dosyasını açabilirsiniz."
  },
  {
    "objectID": "haftalar/intro_to_r - tr.html#resources-for-learning-r-and-working-in-rstudio",
    "href": "haftalar/intro_to_r - tr.html#resources-for-learning-r-and-working-in-rstudio",
    "title": "R and RStudio Tanıtımı",
    "section": "6 Resources for learning R and working in RStudio",
    "text": "6 Resources for learning R and working in RStudio\nR ve RStudio Öğrenmek İçin Kaynaklar\nBu, R ve RStudio’ya kısa bir girişti. Ders ilerledikçe size daha fazla fonksiyon ve dilin daha kapsamlı bir kullanımını sunacağız.\nBu derste tidyverse paketler grubunu kullanacağız. Grolemund ve Wickham tarafından yazılan R For Data Science kitabı, tidyverse ile R’de veri analizi için harika bir kaynaktır. R kodlarını Google’da ararken, arama sorgunuza bu paket adlarını da eklediğinizden emin olun. Örneğin, “scatterplot in R” yerine “scatterplot in R with the tidyverse” şeklinde aratın.\nDönem boyunca işinize yarayabilecek bazı kaynaklar:\n\nRMarkdown cheatsheet\nData transformation cheatsheet\nData visualization cheatsheet\n\nNot: Bu kısa rehberlerde (cheatsheet) yer alan bazı kodlar bu ders için biraz ileri düzey olabilir. Ancak çoğu, dönem boyunca işinize yarayacaktır."
  },
  {
    "objectID": "haftalar/demo/repro.html",
    "href": "haftalar/demo/repro.html",
    "title": "Uretilebilir Rapor 1",
    "section": "",
    "text": "Burada iki koşullu bir çalışmadan elde edilen verileri simüle edeceğiz. A koşulundaki ortalama 0 ve B koşulundaki ortalama 1’dir.\n\n\nCode\nn &lt;- 100\n\ndata &lt;- data.frame(\n  id = 1:n,\n  condition = c(\"A\", \"B\") |&gt; rep(each = n/2),\n  dv = c(rnorm(n/2, 0), rnorm(n/2, 1))\n)"
  },
  {
    "objectID": "haftalar/demo/repro.html#veri-üretim",
    "href": "haftalar/demo/repro.html#veri-üretim",
    "title": "Uretilebilir Rapor 1",
    "section": "",
    "text": "Burada iki koşullu bir çalışmadan elde edilen verileri simüle edeceğiz. A koşulundaki ortalama 0 ve B koşulundaki ortalama 1’dir.\n\n\nCode\nn &lt;- 100\n\ndata &lt;- data.frame(\n  id = 1:n,\n  condition = c(\"A\", \"B\") |&gt; rep(each = n/2),\n  dv = c(rnorm(n/2, 0), rnorm(n/2, 1))\n)"
  },
  {
    "objectID": "haftalar/demo/repro.html#grafik",
    "href": "haftalar/demo/repro.html#grafik",
    "title": "Uretilebilir Rapor 1",
    "section": "2 Grafik",
    "text": "2 Grafik"
  },
  {
    "objectID": "haftalar/demo/html_document2.html",
    "href": "haftalar/demo/html_document2.html",
    "title": "referans verme",
    "section": "",
    "text": "Pırlanta ücretleri çeşitli faktörlere bağlıdır\n\ncut (Bakınız Tablo @ref(tab:kesim))\ncolour (Bakınız Tablo @ref(tab:renk))\nclarity (Bakınız Şekil @ref(fig:parlaklik))\ncarats (Bakınız Şekil @ref(fig:karat))\nBakınız Bolum @ref(sonuclar) sonuclar icin\n\n\n\n\n\n\n\n\nKesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "haftalar/demo/html_document2.html#tablolar",
    "href": "haftalar/demo/html_document2.html#tablolar",
    "title": "referans verme",
    "section": "",
    "text": "Kesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324"
  },
  {
    "objectID": "haftalar/demo/html_document2.html#grafikler",
    "href": "haftalar/demo/html_document2.html#grafikler",
    "title": "referans verme",
    "section": "",
    "text": "Parlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "haftalar/02_Veri_duz.html",
    "href": "haftalar/02_Veri_duz.html",
    "title": "Veri İnceleme",
    "section": "",
    "text": "Bu derste temel amacımız, veri düzenleme ve özetleme tekniklerini uygulamalı olarak öğrenmektir.\nÖzellikle, değişkenler arasındaki ilişkileri incelerken verilerin farklı düzeylerde (toplam vs. alt gruplar) nasıl farklı görünebileceğini keşfedeceğiz.\nBu bağlamda Simpson Paradoksu ve verilerin uygun şekilde düzenlenip gruplanmaması durumunda nasıl yanıltıcı sonuçlara ulaşılabileceğini göstermesi açısından güçlü bir örnektir.\nAnscombe’un Dörtlüsü ise, aynı özet istatistiklere sahip veri setlerinin görselleştirilmeden yanlış yorumlanabileceğini ortaya koyar.\n\nVeri düzenlemenin önemi, sadece “doğru hesaplama” yapmak değil; aynı zamanda hangi değişkenlerin kontrol edilmesi gerektiğini fark ederek daha anlamlı sonuçlar çıkarmaktır.\n🔎 Uygulamalar\n\nSimpson Paradoksu (UCBadmit Örneği)\n\nGenel oranlar ile alt grup oranlarını karşılaştırma\nKarıştırıcı (confounding) değişkenlerin etkisini görme\nVeri düzenlemenin ve doğru gruplamanın önemini tartışma\n\n\n\n\nAnscombe’un Dörtlüsü\n\nAynı özet istatistiklere sahip farklı veri setlerini keşfetme\nÖzet istatistikler (ortalama, sd, korelasyon, regresyon) ile görselleştirme sonuçlarını karşılaştırma\nVeriyi görselleştirmeden sadece özet istatistiklere güvenmenin sakıncalarını tartışma\nDersin simspon paradoksu kısmı OpenIntro’nun Introduction to Modern Statistics bölümünden uyarlanmıştır."
  },
  {
    "objectID": "haftalar/02_Veri_duz.html#uygulama-görevi",
    "href": "haftalar/02_Veri_duz.html#uygulama-görevi",
    "title": "Veri İnceleme",
    "section": "💡 Uygulama Görevi",
    "text": "💡 Uygulama Görevi\npalmerpenguins paketinden penguins veri setini yükleyin.\nVeri seti Antarktika’daki penguenlerin türü, ad, boy, ağırlık, yüzgeç uzunluğu, cinsiyet vb.bilgilerini içerir.\n\npenguenlerin vücut kitle indeksini (body_mass_g / flipper_length_mm) veri setine ekleyin\nBu yeni değişken için türler göre ortalama, standart sapma, minimum ve maksimum değerlerini hesaplayın.\n\n\n\nWarning: package 'palmerpenguins' was built under R version 4.4.3\n\n\n\n  \n\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "haftalar/01_Giris.html",
    "href": "haftalar/01_Giris.html",
    "title": "Temeller",
    "section": "",
    "text": "Paketlerden veri yüklemek\nVeri setlerini (data frame) ve tidy data yaklaşımını tanıtmak\nDeğişken türlerini tartışmak ve ilişkilendirmek\nVeri setlerini değişken türlerini dönüştürmek için mutate fonksiyonunu kullanmak\nSürekli değişkenleri kategorik değişkenlere dönüştürmek\nVerileri filtrelemek ve ardından gereksiz düzeyleri (levels) kaldırmak\nKategorik değişkenlerde bazı düzeyleri birleştirmek\nİki mevcut değişkene dayalı yeni bir değişken oluşturmak\n\nBu amaçları, R yazılıma giriş için açıklayıcı olduğunu düşündüğüm bir kılavuz üzerinden ilerleyerek açıklamak istiyorum.\nİlk bölümün linki🔗 Language of data\n\nPaket yükleme\n\n\n📌 Uyarılara dikkat ediniz.\n\n\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(openintro)\n\nWarning: package 'openintro' was built under R version 4.4.3\n\n\nLoading required package: airports\n\n\nWarning: package 'airports' was built under R version 4.4.3\n\n\nLoading required package: cherryblossom\n\n\nWarning: package 'cherryblossom' was built under R version 4.4.3\n\n\nLoading required package: usdata\n\n\nWarning: package 'usdata' was built under R version 4.4.3\n\n\n\nBu klavuzda, openintro paketinde yer alan High School and Beyond veri seti hsb2 ile kullanılmıştır.\n\n\nhsb2"
  },
  {
    "objectID": "haftalar/01_Giris.html#uygulamalı-görev---1",
    "href": "haftalar/01_Giris.html#uygulamalı-görev---1",
    "title": "Temeller",
    "section": "💡 Uygulamalı Görev - 1",
    "text": "💡 Uygulamalı Görev - 1\nR’da yer alan mtcars veri setini yükleyin ve veri setinin ilk birkaç satırını görüntüleyin.\n\n📌 veri seti yüklendikten sonra head() fonksiyonunu kullanarak veri setinin ilk birkaç satırını görüntüleyebilirsiniz."
  },
  {
    "objectID": "haftalar/01_Giris.html#veri-inceleme",
    "href": "haftalar/01_Giris.html#veri-inceleme",
    "title": "Temeller",
    "section": "1.1 Veri inceleme",
    "text": "1.1 Veri inceleme\nBu veri setinin boyutlarını, değişken adlarını ve ilk birkaç gözlemini görmek için veri setinin adını glimpse() fonksiyonunun içine yazabilirsiniz.\n\nglimpse(hsb2)\n\nRows: 200\nColumns: 11\n$ id      &lt;int&gt; 70, 121, 86, 141, 172, 113, 50, 11, 84, 48, 75, 60, 95, 104, 3…\n$ gender  &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"male\", \"male\", \"male\", \"mal…\n$ race    &lt;chr&gt; \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"african…\n$ ses     &lt;fct&gt; low, middle, high, high, middle, middle, middle, middle, middl…\n$ schtyp  &lt;fct&gt; public, public, public, public, public, public, public, public…\n$ prog    &lt;fct&gt; general, vocational, general, vocational, academic, academic, …\n$ read    &lt;int&gt; 57, 68, 44, 63, 47, 44, 50, 34, 63, 57, 60, 57, 73, 54, 45, 42…\n$ write   &lt;int&gt; 52, 59, 33, 44, 52, 52, 59, 46, 57, 55, 46, 65, 60, 63, 57, 49…\n$ math    &lt;int&gt; 41, 53, 54, 47, 57, 51, 42, 45, 54, 52, 51, 51, 71, 57, 50, 43…\n$ science &lt;int&gt; 47, 63, 58, 53, 53, 63, 53, 39, 58, 50, 53, 63, 61, 55, 31, 50…\n$ socst   &lt;int&gt; 57, 61, 31, 56, 61, 61, 61, 36, 51, 51, 61, 61, 71, 46, 56, 56…\n\n\nSırada, gapminder paketindeki gapminder veri setini inceleyelim. Veri seti 1952–2007 yılları arasında ülkelerin yaşam beklentisi, nüfus ve kişi başına gayri safi milli hasıla verilerini içerir.\nglimpse() fonksiyonunu kullanarak gapminder veri setine göz atın.\n\nlibrary(gapminder)\n\nWarning: package 'gapminder' was built under R version 4.4.3\n\nglimpse(gapminder)\n\nRows: 1,704\nColumns: 6\n$ country   &lt;fct&gt; \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", …\n$ continent &lt;fct&gt; Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, …\n$ year      &lt;int&gt; 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 1992, 1997, …\n$ lifeExp   &lt;dbl&gt; 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39.854, 40.8…\n$ pop       &lt;int&gt; 8425333, 9240934, 10267083, 11537966, 13079460, 14880372, 12…\n$ gdpPercap &lt;dbl&gt; 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, 786.1134, …\n\n\n\nFarklı veri türlerini farkettiniz mi?"
  },
  {
    "objectID": "haftalar/01_Giris.html#sayısal-veriler",
    "href": "haftalar/01_Giris.html#sayısal-veriler",
    "title": "Temeller",
    "section": "2.1 Sayısal Veriler",
    "text": "2.1 Sayısal Veriler\nSürekli (ya da nicel) değişkenler, sayısal değerler alır. Bu değerlerle toplama, çıkarma, ortalama alma gibi aritmetik işlemler yapmak anlamlıdır.\nSayısal değişkenler sürekli (continuous) veya kesikli (discrete) olabilir:\n\nSürekli sayısal değişkenler genellikle ölçme yoluyla elde edilir (ör. boy uzunluğu). Belirli bir aralıkta sonsuz sayıda değer alabilirler.\nKesikli sayısal değişkenler ise belirli ve sayılabilir değerlerden birini alır. Örneğin bir evdeki çocuk sayısı. Genel olarak sayma verileri (count data) kesikli değişkenlere örnektir.\n\nBir değişkenin sürekli mi kesikli mi olduğuna karar verirken, gözlenen değerden çok değişkenin doğasına bakmak önemlidir. Örneğin, boy aslında sürekli bir değişkendir; ancak biz boyu santimetre ya da inç gibi en yakın birime yuvarlayarak raporladığımız için kesikli gibi görünebilir."
  },
  {
    "objectID": "haftalar/01_Giris.html#kategorik-veriler",
    "href": "haftalar/01_Giris.html#kategorik-veriler",
    "title": "Temeller",
    "section": "2.2 Kategorik Veriler",
    "text": "2.2 Kategorik Veriler\nKategorik (ya da nitel) değişkenler sınırlı sayıda farklı kategori alır.\n\nEğer kategoriler sıralı bir yapıya sahipse, bu tür değişkenlere ordinal denir.\nÖrneğin: Bir ankette müşteri hizmetlerinden memnuniyet “çok memnun değilim”, “memnun değilim”, “kararsızım”, “memnunum”, “çok memnunum” şeklinde derecelendirilebilir. Burada doğal bir sıralama olduğu için değişken ordinale girer.\nEğer kategoriler arasında doğal bir sıralama yoksa, değişken nominal olarak adlandırılır.\nÖrneğin: “Tabletiniz var mı? (Evet / Hayır)” sorusu. Burada cevapların sırası yoktur.\n\nNot: Kategorik değişkenler sayılarla kodlanabilir (ör. likert ölçeğinde 1–5 arası puanlama). Ancak bu sayılar yalnızca kategori düzeylerini temsil eden sembollerdir; aritmetik işlemler yapmak anlamlı değildir."
  },
  {
    "objectID": "haftalar/01_Giris.html#high-school-and-beyond-veri-setindeki-değişkenler",
    "href": "haftalar/01_Giris.html#high-school-and-beyond-veri-setindeki-değişkenler",
    "title": "Temeller",
    "section": "2.3 High School and Beyond Veri Setindeki Değişkenler",
    "text": "2.3 High School and Beyond Veri Setindeki Değişkenler\nglimpse() fonksiyonunu kullanarak veri setindeki değişkenlerin listesini görebilir ve bu değişkenlerde hangi tür değerlerin saklandığını inceleyebiliriz.\n\nid: Öğrenciye ait kimlik numarasıdır. Teknik olarak kategorik bir değişken olsa da analizlerde ilişkileri incelemek için kullanışlı değildir. Bunu, öğrencilerin isimlerinin anonimleştirilmiş bir karşılığı gibi düşünebilirsiniz.\ngender (cinsiyet): “male” ve “female” düzeylerine sahip kategorik bir değişkendir. Burada dikkat edilmesi gereken nokta, High School and Beyond gibi resmi araştırmalarda kullanılan dilin değişmesinin genellikle yavaş olmasıdır. Bu nedenle “gender” olarak etiketlenmiş değişkenler aslında biyolojik cinsiyeti (erkek/kadın) ölçmektedir. Bu değişkende doğal bir sıralama yoktur; dolayısıyla sadece kategorik bir değişkendir.\nrace (ırk/etnik köken): “white”, “african american”, “hispanic” ve “asian” düzeylerine sahip kategorik bir değişkendir. Bu değişkende de doğal bir sıralama yoktur.\nsocio-economic status (sosyo-ekonomik durum): “low”, “middle” ve “high” düzeylerine sahiptir. Bu düzeyler arasında doğal bir sıralama olduğundan, bu değişken ordinal kategorik bir değişkendir.\nschool type ve program: Bunlar da kategorik değişkenlerdir, ancak düzeyleri arasında doğal bir sıralama yoktur.\nokuma, yazma, matematik, fen ve sosyal bilgiler puanları: Bu değişkenler, öğrencilerin testlerden aldıkları puanlardır. Tam sayılardan oluşur ve (sınavlarda küsuratlı puanların verilmediğini varsayarsak) kesikli (discrete) sayısal değişkenlerdir.\n\n\n💡 Uygulamalı Görev - 2\ngapminder veri setindeki değişkenleri inceleyin ve her bir değişkenin türünü (sayısal/kategorik) belirleyin. Özellikle year, lifeExp, pop ve gdpPercap değişkenlerine odaklanın."
  },
  {
    "objectID": "haftalar/01_Giris.html#rde-kategorik-veriler-faktörler",
    "href": "haftalar/01_Giris.html#rde-kategorik-veriler-faktörler",
    "title": "Temeller",
    "section": "2.4 R’de Kategorik Veriler: Faktörler",
    "text": "2.4 R’de Kategorik Veriler: Faktörler\nR’de farklı veri sınıfları vardır. Bunlardan biri faktör (factor) sınıfıdır. R, kategorik değişkenleri çoğunlukla faktör olarak saklar.\nFaktörlerin önemli bir kullanım alanı istatistiksel modellemedir, çünkü kategorik değişkenler modellere sayısal değişkenlerden farklı şekilde girer. Şimdilik bilmeniz gereken, faktörlerin bazı durumlarda gereksiz görünse de birçok analiz için doğru şekilde çalışmayı sağlayan vazgeçilmez bir yapı olduğudur.\nKategorik veri ile yapılan analizlerde yaygın bir adım, yalnızca verinin bir alt kümesiyle çalışmaktır.\nÖrneğin:\n\nSadece devlet okulundaki öğrencilerin verilerini analiz etmek\n\nSadece “female” olarak tanımlanan öğrenciler üzerinde çalışmak\n\nBu alt kümeleri elde etmek için kategorik değişkenin belirli düzeylerini (levels) filtreleriz.\n\n2.4.1 Örnek: High School and Beyond Verisinde Alt Grup Analizi\nDiyelim ki sadece devlet okullarındaki öğrenciler üzerinde bir analiz yapmak istiyoruz. İlk adım, bu türde kaç öğrenci olduğunu bulmaktır.\nBunun için kullanabileceğimiz yollardan biri, tidyverse içinde yer alan dplyr paketindeki count() fonksiyonudur.\n\ncount() fonksiyonu, bir sütundaki her benzersiz değerin kaç kez tekrarlandığını (frekansını) verir.\nBu örnekte, schtyp (school type) sütunundaki her düzey için öğrenci sayısını elde edeceğiz.\n\n\nlibrary(dplyr)\nlibrary(openintro)\n\n# Her okul türündeki öğrenci sayısını bulma\nhsb2 %&gt;% \n  count(schtyp)"
  },
  {
    "objectID": "haftalar/01_Giris.html#pipe-operatörü",
    "href": "haftalar/01_Giris.html#pipe-operatörü",
    "title": "Temeller",
    "section": "2.5 Pipe Operatörü %>%",
    "text": "2.5 Pipe Operatörü %&gt;%\nPipe operatörü (%&gt;%) dikey çizgi ve büyüktür işaretinden oluşur. R’a, solda gelen nesneyi sağdaki fonksiyonun ilk argümanına aktarmasını söyler.\nMatematiksel olarak:\nx %&gt;% f(y) ifadesi f(x, y) haline gelir, çünkü x, f() fonksiyonunun ilk argümanına aktarılmıştır.\n\nhsb2_public %&gt;% count(schtyp)\n\nKodu şöyle okuyabiliriz:\n“hsb2 veri setini al, count() fonksiyonuna pipe (aktar) et, ardından count() fonksiyonu ile schtyp değişkenindeki benzersiz değerlerin kaç kez geçtiğini say.”\nÖrnek:\nR’de sayıları toplamanın bir yolu sum() fonksiyonudur.\n\nsum(3, 4)\n\n[1] 7\n\n\nBurada 3 ve 4, virgülle ayrılarak toplama işlemine sokulur.\nAynı işlemi pipe ile şöyle yazabiliriz:\n\n3 %&gt;% sum(4)\n\n[1] 7\n\n\nBu kullanım ilk bakışta çok fark yaratmıyor gibi görünebilir. Ancak ders boyunca ilerledikçe pipe operatörünün, veri düzenleme adımlarını ardışık olarak zincirlemeye izin verdiğini göreceğiz.\nBu sayede daha uzun işlemler bile çok daha okunabilir hale gelir.\n\n2.5.1 Filtreleme\n\nfilter() fonksiyonunu kullanarak sadece devlet okullarındaki öğrencileri seçelim.\n\nhsb2 veri setinde al, filter() fonksiyonuna aktar. Ardından school type değişkeni public olan satırları seç. Sonucu hsb2_public adlı yeni bir veri setine ata.”\n\nhsb2_public &lt;- hsb2 %&gt;%\n  filter(schtyp == \"public\")\n\n\n\n2.5.2 Önemli Noktalar\n\nÇift eşittir (==): R’de mantıksal testtir. “Eşit mi?” sorusunu sorar.\nTırnak işareti (““): Kategorik değişkenler karakter tipindedir. Bu yüzden schtyp ==”public” ifadesinde “public” tırnak içinde yazılmalıdır. Tırnak koymayı unutursanız R hata mesajı döner!\n\n\nhsb2_public %&gt;% count(schtyp)\n\n\n  \n\n\n\n\n\n💡 Uygulamalı Görev - 3\n“Devlet okulunda okuyan ve sosyo-ekonomik durumu düşük olan öğrencileri filtreleyin. Kaç gözlem kaldı?”"
  },
  {
    "objectID": "haftalar/01_Giris.html#değişkenleri-kategorik-hale-getirme",
    "href": "haftalar/01_Giris.html#değişkenleri-kategorik-hale-getirme",
    "title": "Temeller",
    "section": "2.6 Değişkenleri Kategorik Hale Getirme",
    "text": "2.6 Değişkenleri Kategorik Hale Getirme\nVar olan bir değişkenden yeni bir değişken üretmenin yaygın yollarından biri kategorik hale getirmedır (discretizing).\nBu, sayısal bir değişkeni belirli kriterlere göre kategorik bir değişkene dönüştürmek anlamına gelir.\nDiyelim ki öğrencilerin gerçek okuma puanı ile ilgilenmiyoruz; onun yerine puanlarının ortalamanın altında mı yoksa üzerinde mi olduğuna bakmak istiyoruz.\nÖnce ortalama okuma puanını mean() fonksiyonu ile hesaplayalım:\n\nlibrary(dplyr)\nlibrary(openintro)\n\nmean(hsb2$read)\n\n[1] 52.23\n\n\nBu değeri daha sonra kullanabilmek için bir nesneye atayalım:\n\navg_read &lt;- mean(hsb2$read)\navg_read\n\n[1] 52.23\n\n\nKısayol: Atamayı parantez içine alırsak hem nesneye atar hem de çıktısını görürüz:\n\n(avg_read &lt;- mean(hsb2$read)) # nesne adını tekrar yazmak zorunda kalmadık\n\n[1] 52.23\n\n\nŞimdi her öğrenci için okuma puanı ortalamanın altında mı yoksa ortalama ve üzerinde mi olduğunu belirleyen yeni bir değişken oluşturalım.\nBunun için mutate() ve if_else() fonksiyonlarını kullanacağız:\n\nhsb2_updated &lt;- hsb2 %&gt;%\n  mutate(read_cat = if_else(read &lt; avg_read, \n                            \"ortalama altı\", \n                            \"ortalama ve üstü\"))\n\nMantık:\n\nŞart (logical test): read &lt; avg_read\nTRUE ise: “ortalama altı”\nFALSE ise: “ortalama ve üstü”\n\n\nhsb2_updated %&gt;% count(read_cat)\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(hsb2_updated, aes(x = read_cat)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n📌 Herhangi bir veri analizinin en mantıklı ve faydalı ilk adımı keşifsel analizdir.\n\nKeşifsel veri analizinin en önemli bileşenlerinden biri ise görselleştirmedir.\nR’de veri görselleştirmenin birçok yöntemi vardır. Bu derste tidyverse içinde yer alan ggplot2 paketini kullanacağız.\n\nggplot2, modern görünümlü, kullanımı kolay grafikler üretir.\nBasit iki değişkenli grafikler üretmeyi öğrendikten sonra, aynı sözdizimini biraz daha genişleterek çok değişkenli görselleştirmeler de kolayca yapılabilir.\nggplot2’nin en cazip özelliklerinden biri, grafiklerin katmanlar halinde inşa edilmesidir:\n\nİlk katmanda ham veriler\nÜzerine notasyonlar, özet istatistikler veya eğilim çizgileri eklenebilir.\n\nBu yaklaşım öğrenmeyi kolaylaştırır, çünkü adım adım basitten karmaşığa geçiş yapılabilir.\n\n\n2.6.1 💡 Uygulamalı Görev - 4\nhsb2_updated veri setine yeni bir değişken oluşturarak matematik puanlarını alt orta ve ust olarak kategorize edin. Her kategoride kaç öğrenci var, bunu bir bar grafiğinde gösteriniz?\n\n📌 25. çeyrek ve altı alt, 26.-75. çeyrek orta, 76. çeyrek ve üstü üst olarak kategorize edebilirsiniz."
  },
  {
    "objectID": "haftalar/01_Giris.html#görselleştirme",
    "href": "haftalar/01_Giris.html#görselleştirme",
    "title": "Temeller",
    "section": "2.7 Görselleştirme",
    "text": "2.7 Görselleştirme\nHigh School and Beyond veri setindeki öğrencilerin matematik ve fen puanları arasındaki ilişkiyi görselleştirelim:\n\nlibrary(ggplot2)\nlibrary(openintro)\n\nggplot(hsb2, aes(x = math, y = science)) +\n  geom_point() +\n  labs(title = \"Matematik ve Fen Puanları Arasındaki İlişki\",\n       x = \"Matematik Puanı\",\n       y = \"Fen Puanı\")\n\n\n\n\n\n\n\n\n\nGrafik üretmek için ggplot() fonksiyonunu kullanıyoruz.\n\nİlk argüman, kullanmak istediğimiz veri çerçevesi: data = hsb2.\n\naes() (aesthetics) içinde, veri çerçevesindeki değişkenleri grafiğin eksenlerine eşliyoruz.\n\nBu örnekte, x eksenine fen puanı (science), y eksenine matematik puanı (math) eşlenmiştir.\n\n\nSon olarak, her gözlemi grafikte hangi geometrik şekille göstermek istediğimizi belirtiyoruz.\n\nDağılım grafiği (scatter plot) yapmak istediğimiz için, her gözlemi bir “nokta” ile gösteriyoruz.\n\nBu katmanı eklemek için geom_point() fonksiyonunu kullanıyoruz.\n\n\nÖzetle:\n\nAna fonksiyon: ggplot()\nİlk argüman: kullanılacak veri\naes(): değişkenleri grafiğin özelliklerine (eksene, renge, vb.) eşler\ngeom_XXX(): hangi tür grafik çizileceğini belirler\n\n\n2.7.1 Katman Mantığı\nDikkat edilmesi gereken bir diğer nokta: geom_XXX() fonksiyonu, ggplot()’tan sonra + işareti ile eklenir.\n\nggplot2 grafiklerinin katmanlar halinde oluşturulduğunu söylemiştik.\n\n+ işareti bu katmanları birbirinden ayırır.\n\nGenel olarak + satır sonu gibi düşünülebilir, bu yüzden + yazdıktan sonra Enter tuşuna basmak iyi bir alışkanlıktır.\n\nZorunlu olmasa da, her katmanı yeni bir satırda yazmak kodun daha okunabilir olmasını sağlar.\n\nBu nedenle biz de bu derste bu yapıyı kullanacağız ve siz de grafiklerinizde bu yöntemi takip etmenizi tavsiye ederiz.\nElde ettiğimiz grafikte, öğrencilerin fen ve matematik puanları arasında pozitif bir ilişki görüyoruz.\nYani fen puanı yüksek olan öğrenciler genellikle matematikten de yüksek puan alıyor."
  },
  {
    "objectID": "haftalar/01_Giris.html#matematik-fen-ve-program-türü",
    "href": "haftalar/01_Giris.html#matematik-fen-ve-program-türü",
    "title": "Temeller",
    "section": "2.8 Matematik, Fen ve Program Türü",
    "text": "2.8 Matematik, Fen ve Program Türü\nŞimdi öğrencilerin matematik ve fen puanlarını tekrar görselleştirelim,\nancak bu kez öğrencilerin dahil oldukları program türünü de dikkate alalım:\n- general\n- academic\n- vocational\nBunu yapmak için color estetiğini kullanarak her program türüne farklı bir renk atayabiliriz:\n\nggplot(hsb2, aes(x = science , y = math, color = prog)) +\n  geom_point() +\n  labs(title = \"Matematik ve Fen Puanları: Program Türüne Göre\",\n       x = \"Matematik Puanı\",\n       y = \"Fen Puanı\",\n       color = \"Program Türü\")\n\n\n\n\n\n\n\n\nFen ve matematik puanları arasındaki pozitif ilişki hâlâ belirgindir.\nAncak grafiğe program türünü eklediğimizde şunu görüyoruz:\n- Akademik programlardaki öğrenciler (yeşil noktalar) genellikle matematikte fen puanlarına göre daha yüksek puan alma eğilimindedir.\n- Mesleki (vocational) programdaki öğrenciler (mavi) ve genel programdaki öğrenciler (kırmızı) ise görece daha düşük puanlara sahiptir.\n\n💡 Uygulamalı Görev - 4\nYukarıdaki grafiğe, her bir program türü için ayrı bir doğrusal regresyon doğrusunu ekleyin.\nSizce program türüne göre öğrencilerin matematik ve fen puanları arasındaki ilişki nasıl farklılaşıyor?\nHangi program türünde matematik puanları fen puanlarına göre daha yüksek çıkma eğiliminde görünüyor?\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n💡 Uygulamalı Görev - 5\nDersin devam eden süreçlerinde size ödev olarak bırakacağım ilk lab çalışmasını derste beraber yapacağız"
  },
  {
    "objectID": "haftalar/03_Gorsel.html",
    "href": "haftalar/03_Gorsel.html",
    "title": "Görselleştirme",
    "section": "",
    "text": "Bu derste kullanacağımız midiPISA veri seti;\nöğrenci id (OGRENCIID), sınıf düzeyi (SINIF), cinsiyet (CINSIYET), anne eğitim düzeyi (Anne_Egitim), baba eğitim düzeyi (Baba_Egitim), okumaktan zevk alma (OKUMA_ZEVK), ST097Q01TA, ST097Q02TA, ST097Q03TA, ST097Q04TA, ST097Q05TA, okuma puanı olası değer 1 (ODOKUMA1), okuma puanı olası değer 2 (ODOKUMA2), okuma puanı olası değer 3 (ODOKUMA3), okuma puanı olası değer 4 (ODOKUMA4), okuma puanı olası değer 5 (ODOKUMA5) değişkenleri olmak üzere toplam 16 değişkenden oluşmaktadır. Veri Seti\nload(\"data/midiPISA.rda\")\nönce veriyi inceleyelim\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\ndplyr::glimpse(midiPISA)\n\nRows: 6,890\nColumns: 16\n$ OGRENCIID   &lt;dbl&gt; 79200768, 79201064, 79201118, 79201275, 79201481, 79201556…\n$ SINIF       &lt;hvn_lbll&gt; 10, 10, 10, 9, 9, 10, 10, 10, 10, 10, 10, 11, 9, 10, …\n$ CINSIYET    &lt;hvn_lbll&gt; 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1,…\n$ Anne_Egitim &lt;hvn_lbll&gt; 2, 2, 1, 6, 4, 4, 5, 5, 1, 0, 1, 6, 4, 4, 2, 4, 2, 5,…\n$ Baba_Egitim &lt;hvn_lbll&gt; 2, 2, 2, 6, 4, 6, 5, 5, 4, 2, 5, 6, 4, 1, 4, 5, 4, 5,…\n$ OKUMA_ZEVK  &lt;dbl&gt; -0.2891, 0.6040, 0.6380, -1.1538, 0.6669, 0.3568, -0.0886,…\n$ ST097Q01TA  &lt;hvn_lbll&gt; 1, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 1, 1, 2, 4, 2, 3, 3,…\n$ ST097Q02TA  &lt;hvn_lbll&gt; 2, 2, 3, 2, 3, 3, NA, 3, 4, 4, 4, 2, 1, 2, 3, 3, 3, 4…\n$ ST097Q03TA  &lt;hvn_lbll&gt; 1, 3, 3, 3, 4, 2, 3, 2, 3, 2, 3, 1, 1, 3, 4, 4, 3, 3,…\n$ ST097Q04TA  &lt;hvn_lbll&gt; 1, 3, 3, 1, 3, 2, 3, 1, 4, 1, 4, 2, 1, 2, 3, 3, 2, 3,…\n$ ST097Q05TA  &lt;hvn_lbll&gt; 1, 3, 3, 1, 1, 3, 4, 2, 3, 1, 4, 2, 1, 3, 3, 3, 1, 3,…\n$ ODOKUMA1    &lt;dbl&gt; 376.022, 512.316, 396.383, 393.006, 552.457, 441.286, 410.…\n$ ODOKUMA2    &lt;dbl&gt; 417.746, 473.229, 413.859, 428.757, 570.109, 415.682, 421.…\n$ ODOKUMA3    &lt;dbl&gt; 420.630, 563.902, 423.121, 364.850, 562.955, 406.586, 425.…\n$ ODOKUMA4    &lt;dbl&gt; 413.837, 485.396, 452.124, 382.522, 530.835, 437.001, 384.…\n$ ODOKUMA5    &lt;dbl&gt; 434.434, 500.394, 392.434, 378.563, 532.487, 473.036, 461.…\nAnne_Eğitim kategorilerine bakalım\nmidiPISA |&gt; \n  distinct(Anne_Egitim )\nOrtaya çıkan tabloyu incelediğimizde aslında 8 olası değeri olduğunu öğreniyoruz\nBaba_Eğitim kategorilerine bakalım\nmidiPISA |&gt; \n  distinct(Baba_Egitim )\nİki kategorik değişkenin (örneğin burada olduğu gibi) her bir düzey kombinasyonuna düşen gözlem sayılarını göstermek için yaygın kullanılan bir yol “kontenjans tablosu” (contingency table) oluşturmaktır.\nBir kontenjans tablosu oluşturmak için üç adım gerekir:\nmidiPISA |&gt; \n  count(Anne_Egitim, Baba_Egitim)\nbu tabloyu geniş hale getirelim\nama önce spss etiketlerini düzeltelim\nlibrary(sjlabelled)\n\n\nAttaching package: 'sjlabelled'\n\n\nThe following object is masked from 'package:forcats':\n\n    as_factor\n\n\nThe following object is masked from 'package:dplyr':\n\n    as_label\n\n\nThe following object is masked from 'package:ggplot2':\n\n    as_label\n\nmidiPISA &lt;- midiPISA %&gt;% mutate_if(is_labelled, as_factor)\n# Faktor degiskenlere duzey atama amacıyla yazılan fonksiyon\nlevelsnames &lt;- function(x){\n  levels(x) &lt;- names(attr(x,\"labels\"))\n  x\n}\n# Yazılan fonkisyonun faktor degiskenlere uygulanması\nmidiPISA &lt;-mutate_if(midiPISA,is.factor, levelsnames)\nuzun veriyi geniş hale getirmek için pivot_wider\nmidiPISA |&gt; \n  count(Anne_Egitim, Baba_Egitim) |&gt;\n  pivot_wider(names_from = Anne_Egitim, values_from = n)\nBazı düzeylerde çok az sayıda gözlem olduğunu ortaya koydu. Analizi basitleştirmek için bu tür düzeyleri veri setinden çıkarmak genellikle faydalıdır.\nR’da bu işlem iki adım gerektirir:\ndroplevels() fonksiyonunu, sıfır gözleme sahip düzeyleri bir değişkenden temizlemek için kullanırız.\nmidiPISA_filtered &lt;- midiPISA %&gt;% \n  filter(!is.na(Anne_Egitim))%&gt;%\n  filter(!is.na(Baba_Egitim))%&gt;%\n  droplevels()"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#çubuk-grafiği",
    "href": "haftalar/03_Gorsel.html#çubuk-grafiği",
    "title": "Görselleştirme",
    "section": "1 Çubuk Grafiği",
    "text": "1 Çubuk Grafiği\nçoğu zaman kategorik değişkenleri grafiksel olarak göstermek daha tablo olarak sunmaktan anlamlıdır.\ngeom_bar() fonksiyonuna position = \"dodge\" argümanını eklemek, grafiğin yan yana çubuk grafik (yani yığılmamış) olmasını sağlar.\nBu grafikleri oluşturmak için şu adımları izleyin:\n\nggplot2 paketini yükleyin.\nX ekseninde Anne_Egitim olacak şekilde, çubukları karakterlerin CINSIYET değişkenine göre doldurarak (fill) yan yana bir çubuk grafik oluşturun.\nX ekseninde CINSIYET olacak şekilde, çubukları karakterlerin align değişkenine göre doldurarak ikinci yan yana çubuk grafiği oluşturun.\n\n\nggplot(midiPISA_filtered , aes(x = Anne_Egitim  , fill = CINSIYET  )) + \n  geom_bar() \n\n\n\n\n\n\n\n# yan yana \nggplot(midiPISA_filtered , aes(x = Anne_Egitim  , fill = CINSIYET  )) + \n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\nPek çok görselleştirmede, grafikteki eksen etiketlerini değiştirmek isteyebilirsiniz. Buradaki örnekte “CINSIYET” ve “Anne_Egitim” etiketleri biraz daha açıklayıcı hale getirilebilir.\nBir ggplot() grafiğinin etiketlerini değiştirmek için grafiğe + labs() katmanı eklenir. Bu katmanda x, y, ve fill etiketlerini, ayrıca grafiğin başlığını belirleyebilirsiniz.\n\nggplot(midiPISA_filtered , aes(x = Anne_Egitim  , fill = CINSIYET  )) + \n  geom_bar(position = \"dodge\") + \n   labs(x = \"Eğitim Düzeyi\", \n       fill = \"CINSIYET\", \n       y = \"Sayi\")"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#sayılardan-oranlara",
    "href": "haftalar/03_Gorsel.html#sayılardan-oranlara",
    "title": "Görselleştirme",
    "section": "2 Sayılardan Oranlara",
    "text": "2 Sayılardan Oranlara\nBazen ham gözlem sayıları yararlı olsa da çoğu zaman oranlar daha ilgi çekicidir. Bu oranları kafamızdan hesaplamaya çalışabiliriz ama R ile açıkça hesaplamak çok daha kolaydır.\nHer kategoriye düşen gözlemlerin toplam içindeki oranlarını görmek istiyorsak, önceki tablomuzu biraz değiştirmemiz gerekir. Bunun için her bir cinsiyet ve sınıfkombinasyonunda gözlemlerin toplam gözlemler içindeki oranını hesaplayan bir sütun eklemeliyiz.\nHer düzeydeki gözlemleri saydıktan sonra, mutate() fonksiyonu ile bu düzeylere düşen gözlemlerin oranını hesaplarız. Bu oranları prop adlı yeni bir değişkene kaydederiz.\nDaha önce olduğu gibi, uzun tabloyu geniş tabloya dönüştürürüz (pivot_wider()). Ancak burada tabloya eklenmiş ekstra bir sütun (n) vardır ve biz bu sütunu tabloda istemiyoruz. Bu nedenle id_cols argümanına, tabloya dahil etmek istediğimiz değişkenlerin isimlerini bir vektör olarak belirtmemiz gerekir. Böylece names_from ve values_from için kullanılan değişkenler dışında kalan sütunlar korunmuş olur.\n\nmidiPISA |&gt;\n  count(CINSIYET, SINIF) |&gt;\n  group_by(SINIF) |&gt; \n  mutate(prop = n / sum(n)) |&gt; \n  pivot_wider(id_cols = CINSIYET, \n              names_from = SINIF, values_from = prop)"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#koşullu-oranlar",
    "href": "haftalar/03_Gorsel.html#koşullu-oranlar",
    "title": "Görselleştirme",
    "section": "3 Koşullu Oranlar",
    "text": "3 Koşullu Oranlar\nDeğişkenler arasındaki sistematik ilişkilerle ilgileniyorsak, koşullu oranlara bakmamız gerekir.\nBu koşullu oranların tablosunu oluşturmak için, oranları hesaplamadan önce bir gruplama değişkeni belirtmemiz gerekir. Bu gruplamayı, group_by() fonksiyonu ile yaparız.\n👉 Satırlara göre koşullandırma (yani satırların toplamı = 1).\n\nggplot(midiPISA, aes(x = CINSIYET, fill = SINIF)) +\n  geom_bar(position = \"fill\") \n\n\n\n\n\n\n\n\n\nggplot(midiPISA, aes(fill = CINSIYET,  x= SINIF)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#tek-değişkenin-dağılımı",
    "href": "haftalar/03_Gorsel.html#tek-değişkenin-dağılımı",
    "title": "Görselleştirme",
    "section": "4 Tek Değişkenin Dağılımı",
    "text": "4 Tek Değişkenin Dağılımı\nTek bir değişken (örneğin CINSIYET) için frekans tablosu oluşturmak için yine count() fonksiyonunu kullanabiliriz. Bu daha basit tabloyu düşünmenin bir yolu da şudur: Orijinal iki yönlü tabloda (iki kategorik değişkenle) her bir SINIF düzeyindeki hücreleri toplayarak özetledik. Diğer değişkenler üzerinden toplama yaptığımız için bu özetleme bazen marjinal dağılım (marginal distribution) olarak adlandırılır.\n\nmidiPISA |&gt; \n  count(CINSIYET)\n\n\n  \n\n\n\n\nmidiPISA |&gt; \n  count(CINSIYET,SINIF) |&gt; \n  pivot_wider(names_from = CINSIYET , values_from = n)"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#basit-çubuk-grafik",
    "href": "haftalar/03_Gorsel.html#basit-çubuk-grafik",
    "title": "Görselleştirme",
    "section": "5 Basit Çubuk Grafik",
    "text": "5 Basit Çubuk Grafik\nBasit çubuk grafik oluşturmanın sözdizimi oldukça basittir; bunu dersin başında görmüştük. Bunun için aes içinden fill = align argümanını çıkarmamız yeterlidir.\n\ncinsiyet\n\n\nggplot(midiPISA, aes(x = CINSIYET)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nsınıf düzeyi\n\n\n# Yeni sıralamayla çubuk grafik\nggplot(midiPISA, aes(x = SINIF)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Sınıf Düzeylerinin Dağılımı\",\n       x = \"Sınıf\",\n       y = \"Öğrenci Sayısı\")"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#faceting-alt-grafikler",
    "href": "haftalar/03_Gorsel.html#faceting-alt-grafikler",
    "title": "Görselleştirme",
    "section": "6 Faceting (Alt Grafikler)",
    "text": "6 Faceting (Alt Grafikler)\nTek bir değişkenin dağılımını görselleştirmenin başka yararlı bir yolu, onu başka bir değişkenin belirli bir değerine göre koşullandırmaktır. Örneğin yalnızca 10. Sınıf öğrencileri için CINSIYET dağılımını görmek isteyebiliriz.\nBunu yapmak için:\n\nVeri setini filtreleyip sadece SINIF= “10” olanlarla bir çubuk grafik çizebiliriz,\nYa da faceting tekniğini kullanabiliriz. Faceting, veriyi bir kategorik değişkenin düzeylerine göre alt gruplara ayırır ve her düzey için ayrı bir grafik oluşturur."
  },
  {
    "objectID": "haftalar/03_Gorsel.html#facetli-çubuk-grafikler",
    "href": "haftalar/03_Gorsel.html#facetli-çubuk-grafikler",
    "title": "Görselleştirme",
    "section": "7 Facet’li Çubuk Grafikler",
    "text": "7 Facet’li Çubuk Grafikler\nggplot2’de faceting uygulamak için grafiğe sadece bir katman daha ekleriz. Bunun için facet_wrap() fonksiyonu kullanılır. İçine tilde (~) ve facet yapmak istediğimiz değişkenin adı yazılır (örn. ~SINIF).\nBu, yukarıdaki grafiği oluştur ama bunu SINIFdeğişkenine göre parçala anlamına gelir.\nYüm sınıf düzeyleri için grafikler elde edilir.\n\nggplot(midiPISA, aes(x = CINSIYET)) +\n  geom_bar() +\n  facet_wrap(~SINIF)"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#faceting-ve-yığma",
    "href": "haftalar/03_Gorsel.html#faceting-ve-yığma",
    "title": "Görselleştirme",
    "section": "8 Faceting ve Yığma",
    "text": "8 Faceting ve Yığma\nÖzünde, facet’li grafik dersin başında gördüğümüz yığılmış çubuk grafiklerin farklı bir düzenlemesidir.\nFacet’ler ya da yığılmış çubuklar:\n\nTek bir değişkenin dağılımını görmek için tek bir facet’e ya da çubuğa,\nDeğişkenler arasındaki ilişkiyi görmek için facet’ler ya da çubuklar arasında karşılaştırma yapmaya olanak tanır.\n\n\nggplot(midiPISA, aes(x = CINSIYET ,fill = SINIF)) +\n  geom_bar()"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#pasta-grafiği",
    "href": "haftalar/03_Gorsel.html#pasta-grafiği",
    "title": "Görselleştirme",
    "section": "9 Pasta Grafiği",
    "text": "9 Pasta Grafiği\nPasta grafiği, kategorik verileri göstermenin yaygın bir yoludur. Dilimlerin büyüklüğü, o düzeydeki gözlem oranını gösterir.\n\nggplot(midiPISA, aes(x = \"\", fill = SINIF)) +\n  geom_bar(width = 1) +\n  coord_polar(\"y\") +\n  labs(title = \"Sınıf Dağılımı (Pie Chart)\", fill = \"Sınıf\")\n\n\n\n\n\n\n\n\n\ncinsiyete göre\n\n\nggplot(midiPISA, aes(x = \"\", fill = SINIF)) +\n  geom_bar(width = 1) +\n  coord_polar(\"y\") +\n  facet_wrap(~CINSIYET) +\n  labs(title = \"Cinsiyete Göre Sınıf Dağılımı\", fill = \"Sınıf\")\n\n\n\n\n\n\n\n\n\noranları ekle\n\n\npie_data &lt;- midiPISA %&gt;%\n  count(CINSIYET, SINIF) %&gt;%\n  group_by(CINSIYET) %&gt;%\n  mutate(prop = n / sum(n),\n         label = scales::percent(prop, accuracy = 1))\n\n# Pasta grafik + etiketler\nggplot(pie_data, aes(x = \"\", y = prop, fill = SINIF)) +\n  geom_col(width = 1) +\n  coord_polar(\"y\") +\n  facet_wrap(~CINSIYET) +\n  geom_text(aes(label = label),\n            position = position_stack(vjust = 0.5), # dilimin ortasına koy\n            color = \"white\",\n            size = 4) +\n  labs(title = \"Cinsiyete Göre Sınıf Dağılımı\",\n       fill = \"Sınıf\",\n       x = NULL, y = NULL) +\n  theme_void()\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\npie_data &lt;- midiPISA %&gt;%\n  count(SINIF) %&gt;%\n  mutate(prop = n / sum(n),\n         label = scales::percent(prop, accuracy = 1))\n\nggplot(pie_data, aes(x = \"\", y = prop, fill = SINIF)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(\"y\") +\n  geom_text(aes(label = label),\n            position = position_stack(vjust = 0.5),\n            color = \"white\", size = 4) +\n  labs(title = \"Sınıf Dağılımı (%)\", fill = \"Sınıf\") +\n  theme_void()\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Veri: SINIF değişkenine göre sayılar\npie_data &lt;- midiPISA %&gt;%\n  count(SINIF)\n\n# Etkileşimli pie chart\nplot_ly(pie_data,\n        labels = ~SINIF,\n        values = ~n,\n        type = \"pie\",\n        textinfo = \"label+percent\",   # etiket + yüzde\n        insidetextorientation = \"radial\") %&gt;%\n  layout(title = \"Sınıf Dağılımı (Pie Chart - Plotly)\")"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#dotplot",
    "href": "haftalar/03_Gorsel.html#dotplot",
    "title": "Görselleştirme",
    "section": "10 Dotplot",
    "text": "10 Dotplot\nSayısal verileri temsil etmenin en doğrudan yolu nokta grafiği (dotplot) kullanmaktır. Burada her bir gözlem, x-eksenindeki uygun değerine yerleştirilen bir nokta ile gösterilir. Benzer değerlere sahip gözlemler, diğerlerinin üstüne yığılır. Nokta grafiğini histogramın bir “kardeşi” gibi düşünebilirsiniz, ancak burada her sütunda kaç gözlem olduğunu tam olarak bilirsiniz, çünkü noktaları tek tek sayabilirsiniz. Önemli bir nokta ise, bu grafik histogramdan çok daha az bilgi kaybı içerir; hatta yalnızca bu grafik verilse bile veri setini neredeyse yeniden oluşturabilirsiniz. Tahmin edebileceğiniz gibi, gözlem sayısı çok arttığında bu grafikleri okumak zorlaşmaya başlar.\nAşağıdaki kod, veri setindeki rasgele seçilmiş 100 kişinin okumaktan alığı zevk için nokta grafiği üretmektedir. Dikkat ederseniz, yalnızca tek bir sayısal değişkenle (ağırlık) ilgilendiğimiz için estetiklerde (aesthetics) yalnızca bu değişken belirtilmiştir. Ayrıca, bu değişken x-estetiği olarak tanımlanmıştır çünkü sayısal bir değişkeni x-ekseninde göstermek “standart”tır. Son olarak, grafiğe noktaları eklemek için geom_dotplot() fonksiyonunun kullanıldığını görüyoruz. Bu fonksiyonun dotsize adlı isteğe bağlı bir argümanı vardır; bu argüman noktaların ne kadar büyük olacağını belirler (0’a yakın değerler noktaları küçültür, 1’e yakın değerler büyütür).\n\nset.seed(100)\nmidiPISA_filtered %&gt;% sample_n(100) %&gt;% \nggplot( aes(x = OKUMA_ZEVK  )) +\n  geom_dotplot(dotsize = 0.4)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\nNokta grafiğinde dikkat edersek, y-ekseni biraz kafa karıştırıcıdır çünkü 0.0 ve 1.0 değerlerinin neyi ifade ettiği açık değildir. Bu durum, ggplot2’nin talihsiz bir sınırlılığıdır: x-ekseni boyunca gruplama (binning) ve y-ekseni boyunca yığma (stacking) işlemi, anlamlı olmayan bir y-ekseni ile sonuçlanır. Grafik çizim becerilerimiz ilerledikçe, y-ekseni tamamen gizlemeyi ya da noktaların sayısıyla daha uyumlu olacak şekilde ölçeği manuel olarak ayarlamayı tercih edebiliriz."
  },
  {
    "objectID": "haftalar/03_Gorsel.html#histogram",
    "href": "haftalar/03_Gorsel.html#histogram",
    "title": "Görselleştirme",
    "section": "11 Histogram",
    "text": "11 Histogram\nEn yaygın kullanılan grafik türlerinden biri histogramdır. Histogram, bu sorunu çözmek için noktaları x-ekseni boyunca kutulara (bin) toplar ve her sütunun yüksekliği, o kutuya düşen gözlem sayısını gösterir. Bu gruplama (binning) nedeniyle veri setini eksiksiz bir şekilde yeniden oluşturmak mümkün değildir; ancak bu yöntem, dağılımın genel şeklini daha net görmemizi sağlar.\nDikkat ederseniz, kodda değişen tek şey geom_dotplot() fonksiyonunun geom_histogram() ile değiştirilmesidir.\n\nmidiPISA %&gt;% \nggplot( aes(x = OKUMA_ZEVK  )) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 69 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nNot: Yukarıdaki kodu çalıştırdığımızda bir mesaj alıyoruz. Bu mesaj bize, uygun bir binwidth seçildiğini ve ayrıca 69 adet eksik değer bulunduğunu bildiriyor. Bu bir hata değil, yalnızca ggplot() fonksiyonunun size bilgi vermesidir!\n\n11.1 Histogram kutuları (bins)\nEğer histogramın basamaklı (kesikli) yapısı sizi rahatsız ederse, birkaç seçeneğiniz vardır.\n\nİlk olarak, bins veya binwidth argümanlarıyla oynayarak histogramın olabildiğince sürekli görünmesini sağlayacak kutu sayısını bulabilirsiniz.\nİkinci olarak, bir sonraki bölümde göreceğimiz yoğunluk grafiği (density plot) kullanabilirsiniz.\n\nggplot2, varsayılan olarak mantıklı bir binwidth seçmeye çalışır; ancak bu seçeneği kendiniz belirleyerek geçersiz kılabilirsiniz. geom_histogram() içindeki bins ve binwidth argümanları, geom_dotplot() fonksiyonundaki dotsize argümanına benzer şekilde isteğe bağlıdır ve histogramın bir yönünü kontrol eder. Örneğin, binwidth = 5 seçersek histogram daha düzgün görünür. Alternatif olarak, geom_histogram()’ın varsayılanı olan 30 kutu yerine istediğimiz kutu sayısını belirtebiliriz.\n\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\n  geom_histogram(binwidth = 5)\n\n\n\n\n\n\n\n\n\nggplot( aes(x = ODOKUMA1  )) +\n  geom_histogram(binwidth = 30)\n\n\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\n  geom_histogram(binwidth = 60)"
  },
  {
    "objectID": "haftalar/03_Gorsel.html#yoğunluk-grafiği-density-plot",
    "href": "haftalar/03_Gorsel.html#yoğunluk-grafiği-density-plot",
    "title": "Görselleştirme",
    "section": "12 Yoğunluk grafiği (Density plot)",
    "text": "12 Yoğunluk grafiği (Density plot)\nYoğunluk grafiği, histogramın şeklini düzgün (smooth) bir çizgiyle temsil eder. Bunu, histogramın üzerine yumuşatılmış bir çizgi çizmek gibi düşünebilirsiniz; böylece dağılımın genel şeklini daha pürüzsüz bir şekilde gösterir. Ancak yoğunluk grafiği, verideki ani sıçramalara karşı oldukça hassastır, bu yüzden yalnızca büyük örneklemlerle kullanılması önerilir.\nKodumuzda değişen tek satır, fonksiyonun geom_density() olarak değiştirilmesidir.\n\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\ngeom_density()\n\n\n\n\n\n\n\n\n\n12.0.1 Bandwidth (bant genişliği)\nYoğunluk grafiğinin daha düzgün görünmesini istiyorsak, grafiğin bandwidth (bant genişliği) değerini artırabiliriz. Bandwidth arttıkça grafik daha pürüzsüz hale gelir; daha küçük bandwidth değerleri ise daha dalgalı (volatil) görünümlere yol açar.\nPeki grafiklerimiz için “en iyi” binwidth veya bandwidth değerini nasıl belirleyeceğiz? Genellikle varsayılan ayarlar makuldür; ancak farklı ölçeklerdeki yapıları görebilmek için hem daha pürüzsüz hem de daha ayrıntılı versiyonlarla oynamak iyi bir uygulamadır. Histogramdaki bins argümanına benzer şekilde, bandwidth değeri de geom_density() fonksiyonunun grafiği oluştururken kullandığı kutu sayısını belirler. Daha büyük bandwidth değerleri daha az kutu üzerinden yumuşatma yapar, bu yüzden daha pürüzsüz bir yoğunluk grafiği elde etmek için daha büyük bw değerleri seçebilirsiniz.\nAşağıdaki alıştırmada farklı bandwidth değerlerini deneyin.\n\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\n  geom_density(bw = 100)\n\n\n\n\n\n\n\n\n\n\n12.1 Kutu grafiği (Boxplot)\nHistogram gibi, kutu grafiği (boxplot) de ham verileri doğrudan göstermez. Bunun yerine, verilerin özet istatistiklerini görselleştirir. Bir kutu grafiği:\n\nDağılımın merkezini (medyan),\nVerilerin orta yarısını ayıran değerleri (birinci ve üçüncü çeyrekler),\nVerilerin büyük çoğunluğunu gösteren değerleri (bıyıkların uçları)\n\nçizer.\nDikkat ederseniz, R kodumuzda değişen tek satır geom_boxplot() fonksiyonunun kullanılmasıdır.\n\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\n geom_boxplot()\n\n\n\n\n\n\n\n\nKutu, verilerin merkezi çoğunluğunu (büyük kısmını) temsil eder.\nBıyıklar, verilerin neredeyse tamamını kapsar.\nAykırı (uç) değerler ise noktalarla gösterilir."
  },
  {
    "objectID": "haftalar/03_Gorsel.html#boxplotlar-dotplotlar",
    "href": "haftalar/03_Gorsel.html#boxplotlar-dotplotlar",
    "title": "Görselleştirme",
    "section": "13 Boxplotlar & Dotplotlar",
    "text": "13 Boxplotlar & Dotplotlar\nBir boxplot’un nasıl oluşturulduğunu daha iyi anlamak için önce bir dotplot’tan başlayalım.\nBoxplot üç temel özet istatistik etrafında şekillenir:\n\nBirinci çeyrek (Q1): Verilerin %25’i bu değerin altındadır.\nİkinci çeyrek (Q2 / medyan): Verilerin %50’si bu değerin altındadır. Yani veri setinin tam ortasında yer alır.\nÜçüncü çeyrek (Q3): Verilerin %75’i bu değerin altındadır.\n\nMedyanın ikinci çeyrek olarak adlandırılmasının nedeni, verilerin yarısının (iki çeyreğin) onun altında, yarısının ise üstünde olmasıdır. Benzer şekilde, birinci çeyrek verilerin yalnızca dörtte birini (%25) altına alırken, üçüncü çeyrek verilerin dörtte üçünü (%75) altına alır.\nBu üç sayı, boxplot’taki kutuyu oluşturur:\n\nMedyan ortada,\nQ1 ve Q3 ise kutunun kenarlarında yer alır.\n\nBir boxplot’a baktığınızda her zaman bilmeniz gereken şey, verilerin orta yarısının bu kutunun içinde olduğudur.\nKutudan dışarı uzanan çizgilere “bıyıklar” (whiskers) denir. Bıyıkların nerede çizileceğine dair çeşitli kurallar vardır. ggplot2’nin kullandığı kural şudur:\n\nKutunun uzunluğunu (IQR = Q3 − Q1) 1.5 ile çarpar,\n\nDaha sonra alt ve üst sınırları (fences) şu şekilde belirler:\n\n-    **Alt sınır:** Q1 − 1.5 × IQR\n\n-    **Üst sınır:** Q3 + 1.5 × IQR\nBıyıklar, en fazla bu sınırlara kadar uzatılır. Eğer bir gözlem bu sınırların dışında kalıyorsa, aykırı değer (outlier) olarak noktalarla gösterilir.\n📌 Boxplot’un en pratik özelliklerinden biri de budur: Verilerin büyük kısmından uzak olan değerleri otomatik olarak işaretleyerek potansiyel aykırı değerleri tespit etmenize yardımcı olur.\n\n13.1 Yoğunluk grafikleri vs. kutu grafikleri\nKutu grafikleri, özellikle birden fazla dağılımı aynı anda karşılaştırmanız gerektiğinde ve aykırı değerleri tespit etmek istediğinizde gerçekten çok işe yarar. Ancak zayıf yönlerinden biri, bir dağılımın birden fazla tepe noktası (modu) olup olmadığını gösterememesidir.\nBuradaki yoğunluk grafiğini düşünün: iki farklı tepe noktası (iki mod) vardır. Aynı dağılımın kutu grafiğini çizdiğimizde ise bu önemli yapı göz ardı edilir, çünkü kutu grafiği her zaman yalnızca tek bir kutu gösterir.\n\n\n13.2 Kutu grafikleri ile aykırı değer tespiti\nBir kutu grafiği, dağılımın merkezi ve yayılımını göstermenin yanı sıra, aykırı değerleri tespit etmenin görsel bir yolunu da sunar. Örneğin, msrp (üretici tarafından önerilen satış fiyatı) değişkenine bu yöntemi uygulayarak, olağanüstü pahalı veya ucuz arabaları tespit edebilirsiniz.\nBunu yapmak için şu adımları izleyelim:\n\nmsrp değişkeninin kutu grafiğini oluşturun.\nEn büyük 3–5 aykırı değeri hariç tutarak yeni bir veri seti oluşturun. Bunun için satırları filtreleyip yalnızca 100.000 $’dan ucuz arabaları tutarak cars_no_out adlı yeni bir veri seti oluşturun.\nBu azaltılmış veri setiyle msrp’nin yeni kutu grafiğini oluşturun.\nİki grafiği karşılaştırın.\n\n\n# Construct boxplot\nmidiPISA %&gt;% \nggplot( aes(x = ODOKUMA1  )) +\n  geom_boxplot()\n\n\n\n\n\n\n\n# Exclude outliers from data\nmidiPISA_no_out &lt;- midiPISA |&gt;\n  filter(ODOKUMA1 &lt; 600)\n  \n# Construct boxplot of msrp using the reduced dataset\nggplot(data = midiPISA_no_out, aes(x = ODOKUMA1)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n13.3 İki değişkenin görselleştirilmesi\nEğer yalnızca tek bir sayısal değişkenin dağılımıyla ilgileniyorsanız, bunu üç şekilde görebilirsiniz. Birincisi, marjinal dağılıma bakmaktır; örneğin okuma puanlarının basit dağılımı gibi.\nAncak, verinin farklı bir alt kümesi için dağılıma bakmak istersek — örneğin yalnızca kızlar için — grafiğe ikinci bir değişken ekleyebiliriz.\nİncelediğimiz grafiklere ikinci bir değişkeni dahil etmenin iki ana yolu vardır:\n\nFacet eklemek (grafiği alt panellere ayırmak),\nRenk eklemek (değerleri renklerle ayırt etmek).\n\n\n# Histogram\nmidiPISA %&gt;% \n  ggplot(aes(x = ODOKUMA1)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"white\") +\n  labs(x = \"Okuma Puanı\", y = \"Frekans\",\n       title = \"Histogram - ODOKUMA1\")\n\n\n\n\n\n\n\n# Density Plot\nmidiPISA %&gt;% \n  ggplot(aes(x = ODOKUMA1)) +\n  geom_density(fill = \"lightgreen\", alpha = 0.5) +\n  labs(x = \"Okuma Puanı\", y = \"Yoğunluk\",\n       title = \"Density Plot - ODOKUMA1\")\n\n\n\n\n\n\n\n# Boxplot\nmidiPISA %&gt;% \n  ggplot(aes(y = ODOKUMA1)) +  # Boxplot'ta x yerine y kullanmak daha uygun\n  geom_boxplot(fill = \"orange\", alpha = 0.6) +\n  labs(y = \"Okuma Puanı\",\n       title = \"Boxplot - ODOKUMA1\")\n\n\n\n\n\n\n\n\n\n\n13.4 Facet’lenmiş histogramlar\nBir histogram kullanarak otoyol yakıt tüketiminin (highway mileage) dağılımına bakalım, fakat bu kez araçların pick-up kamyonet olup olmamasına göre ayrı grafikler çizelim.\nBu ayrı grafikleri oluşturmak için ggplot() fonksiyonuna bir facet_wrap() katmanı ekleyebiliriz. Facet yapmak istediğimiz değişkeni facet_wrap() fonksiyonunun içine yazıyoruz.\n\nmidiPISA%&gt;% \n  ggplot(aes(x = ODOKUMA1)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"white\") +\n  facet_wrap(~  CINSIYET) +\n  labs(x = \"Okuma Puanı\", y = \"Frekans\",\n       title = \"ODOKUMA1 Dağılımı - Cinsiyete Göre Facet\")\n\n\n\n\n\n\n\n\n\nfacet_wrap(~ CINS) ifadesi her cinsiyet için ayrı histogram çiziyor.\n\nİsterseniz ~ OKUL_TURU veya başka kategorik değişkeni de koyabilirsiniz.\n\nGrafiğe bakıldığında, pick-up olmayan araçların (FALSE değerleri) sayısının pick-up araçlardan (TRUE değerleri) çok daha fazla olduğu açıkça görülüyor. Grafik ayrıca, tipik bir pick-up aracın yakıt verimliliğinin (mileage) tipik bir pick-up olmayan araca göre çok daha düşük olduğunu gösteriyor. Bunun yanında, pick-up olmayan araçların değişkenliğinin pick-up araçlara göre daha fazla olduğu da dikkat çekiyor.\n\n\n13.5"
  },
  {
    "objectID": "haftalar/demo/html_document2_1.html",
    "href": "haftalar/demo/html_document2_1.html",
    "title": "referans verme",
    "section": "",
    "text": "Pırlanta ücretleri çeşitli faktörlere bağlıdır\n\ncut (Bakınız Tablo @ref(tab:kesim))\ncolour (Bakınız Tablo @ref(tab:renk))\nclarity (Bakınız Şekil @ref(fig:parlaklik))\ncarats (Bakınız Şekil @ref(fig:karat))\nBakınız Bolum @ref(sonuclar) sonuclar icin\n\n\n\n\n\n\n\n\nKesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "haftalar/demo/html_document2_1.html#tablolar",
    "href": "haftalar/demo/html_document2_1.html#tablolar",
    "title": "referans verme",
    "section": "",
    "text": "Kesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324"
  },
  {
    "objectID": "haftalar/demo/html_document2_1.html#grafikler",
    "href": "haftalar/demo/html_document2_1.html#grafikler",
    "title": "referans verme",
    "section": "",
    "text": "Parlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "haftalar/index.html",
    "href": "haftalar/index.html",
    "title": "📅 Haftalık İçerik",
    "section": "",
    "text": "Aşağıda her haftaya ait içeriğe bağlantılar yer almaktadır. Başlıklar üzerine tıklayarak detaylara ulaşabilirsiniz."
  },
  {
    "objectID": "haftalar/index.html#hafta-temeller",
    "href": "haftalar/index.html#hafta-temeller",
    "title": "📅 Haftalık İçerik",
    "section": "🔹 1-2. Hafta – Temeller",
    "text": "🔹 1-2. Hafta – Temeller\n\nPaketlerden veri yüklemek\nVeri setlerini (data frame) tanıtmak\nDeğişken türleri tanıtmak\nVeri setlerini değişken türlerini dönüştürmek için mutate() fonksiyonunu kullanmak\nSürekli değişkenleri kategorik değişkenlere dönüştürmek\nVerileri filtrelemek ve ardından gereksiz düzeyleri (levels) kaldırmak\nKategorik değişkenlerde bazı düzeyleri birleştirmek\nİki mevcut değişkene dayalı yeni bir değişken oluşturmak"
  },
  {
    "objectID": "haftalar/index.html#hafta-veri-inceleme",
    "href": "haftalar/index.html#hafta-veri-inceleme",
    "title": "📅 Haftalık İçerik",
    "section": "🔹 3. Hafta – Veri İnceleme",
    "text": "🔹 3. Hafta – Veri İnceleme\n\nVerilerin düzenlenmesi, özetlenmesi ve görselleştirilmesi yoluyla farklı bakış açılarının nasıl elde edilebileceğini öğrenmek.\nYanıltıcı özet istatistiklerin önüne geçmek için verileri farklı açılardan incelemenin önemini kavramak."
  },
  {
    "objectID": "haftalar/index.html#hafta-keşfedici-veri-analizi--i",
    "href": "haftalar/index.html#hafta-keşfedici-veri-analizi--i",
    "title": "📅 Haftalık İçerik",
    "section": "🔹 4-5. Hafta – Keşfedici Veri Analizi- I",
    "text": "🔹 4-5. Hafta – Keşfedici Veri Analizi- I\n\nFarklı grafik türlüeri ve grafik elemanlarını tanımak\n\n\n🔹 [6-7. Hafta – Regresyon]\n\n\n🔹 [9. Hafta – Regresyon]\n\n\n🔹 [10. Hafta – Hipotez Testleri]\n\n\n\n🔹 [11. Hafta – İstatistiksel çıkarım I]\n\n\n\n🔹 [12. Hafta – Çıkarımsal Modelleme I]\n📌 Not: 9. hafta (Ara sınav) ve 16. hafta (Final sınavı) içerik sayfası olarak eklenmemiştir."
  },
  {
    "objectID": "haftalar/Untitled/Untitled.html",
    "href": "haftalar/Untitled/Untitled.html",
    "title": "Lab 1: Intro to R",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nCode\nlibrary(openintro)\n\n\nWarning: package 'openintro' was built under R version 4.4.3\n\n\nWarning: package 'airports' was built under R version 4.4.3\n\n\nWarning: package 'cherryblossom' was built under R version 4.4.3\n\n\nWarning: package 'usdata' was built under R version 4.4.3\n\n\n\n0.1 Exercise 1\n\n\nCode\narbuthnot$girls\n\n\n [1] 4683 4457 4102 4590 4839 4820 4928 4605 4457 4952 4784 5332 5200 4910 4617\n[16] 3997 3919 3395 3536 3181 2746 2722 2840 2908 2959 3179 3349 3382 3289 3013\n[31] 2781 3247 4107 4803 4881 5681 4858 4319 5322 5560 5829 5719 6061 6120 5822\n[46] 5738 5717 5847 6203 6033 6041 6299 6533 6744 7158 7127 7246 7119 7214 7101\n[61] 7167 7302 7392 7316 7483 6647 6713 7229 7767 7626 7452 7061 7514 7656 7683\n[76] 5738 7779 7417 7687 7623 7380 7288\n\n\n\n\n0.2 Exercise 2\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 2 here\n\n\n\n\n0.3 Exercise 3\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 3 here\n\n\n\n\n0.4 Exercise 4\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 4 here\n\n\n\n\n0.5 Exercise 5\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 5 here\n\n\n\n\n0.6 Exercise 6\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 6 here\n\n\n\n\n0.7 Exercise 7\nInsert any text here.\n\n\nCode\n# Insert code for Exercise 7 here"
  }
]